/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/file-saver/dist/FileSaver.min.js":
/*!*******************************************************!*\
  !*** ./node_modules/file-saver/dist/FileSaver.min.js ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(a,b){if(true)!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (b),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof __webpack_require__.g&&__webpack_require__.g.global===__webpack_require__.g?__webpack_require__.g:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g, true&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map\n\n//# sourceURL=webpack://fog.vicc.wang/./node_modules/file-saver/dist/FileSaver.min.js?");

/***/ }),

/***/ "./node_modules/js-md5/src/md5.js":
/*!****************************************!*\
  !*** ./node_modules/js-md5/src/md5.js ***!
  \****************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * [js-md5]{@link https://github.com/emn178/js-md5}\n *\n * @namespace md5\n * @version 0.7.3\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_MD5_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_MD5_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = __webpack_require__.g;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && \"object\" === 'object' && module.exports;\n  var AMD =  true && __webpack_require__.amdO;\n  var ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [128, 32768, 8388608, -2147483648];\n  var SHIFT = [0, 8, 16, 24];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'buffer', 'arrayBuffer', 'base64'];\n  var BASE64_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n  var blocks = [], buffer8;\n  if (ARRAY_BUFFER) {\n    var buffer = new ArrayBuffer(68);\n    buffer8 = new Uint8Array(buffer);\n    blocks = new Uint32Array(buffer);\n  }\n\n  if (root.JS_MD5_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  /**\n   * @method hex\n   * @memberof md5\n   * @description Output hash as hex string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} Hex string\n   * @example\n   * md5.hex('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * md5('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method digest\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.digest('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method array\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.array('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method arrayBuffer\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.arrayBuffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.buffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method base64\n   * @memberof md5\n   * @description Output hash as base64 string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} base64 string\n   * @example\n   * md5.base64('The quick brown fox jumps over the lazy dog');\n   */\n  var createOutputMethod = function (outputType) {\n    return function (message) {\n      return new Md5(true).update(message)[outputType]();\n    };\n  };\n\n  /**\n   * @method create\n   * @memberof md5\n   * @description Create Md5 object\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.create();\n   */\n  /**\n   * @method update\n   * @memberof md5\n   * @description Create and update Md5 object\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.update('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * var hash = md5.create();\n   * hash.update('The quick brown fox jumps over the lazy dog');\n   */\n  var createMethod = function () {\n    var method = createOutputMethod('hex');\n    if (NODE_JS) {\n      method = nodeWrap(method);\n    }\n    method.create = function () {\n      return new Md5();\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash('md5').update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw ERROR;\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash('md5').update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  /**\n   * Md5 class\n   * @class Md5\n   * @description This is internal class.\n   * @see {@link md5.create}\n   */\n  function Md5(sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n      this.buffer8 = buffer8;\n    } else {\n      if (ARRAY_BUFFER) {\n        var buffer = new ArrayBuffer(68);\n        this.buffer8 = new Uint8Array(buffer);\n        this.blocks = new Uint32Array(buffer);\n      } else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      }\n    }\n    this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n  }\n\n  /**\n   * @method update\n   * @memberof Md5\n   * @instance\n   * @description Update hash\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @see {@link md5.update}\n   */\n  Md5.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw ERROR;\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw ERROR;\n          }\n        }\n      } else {\n        throw ERROR;\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n    var buffer8 = this.buffer8;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = blocks[16];\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            buffer8[i++] = message[index];\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n          }\n        }\n      } else {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              buffer8[i++] = code;\n            } else if (code < 0x800) {\n              buffer8[i++] = 0xc0 | (code >> 6);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else if (code < 0xd800 || code >= 0xe000) {\n              buffer8[i++] = 0xe0 | (code >> 12);\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              buffer8[i++] = 0xf0 | (code >> 18);\n              buffer8[i++] = 0x80 | ((code >> 12) & 0x3f);\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            }\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 0x800) {\n              blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else if (code < 0xd800 || code >= 0xe000) {\n              blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            }\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Md5.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = blocks[16];\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.bytes << 3;\n    blocks[15] = this.hBytes << 3 | this.bytes >>> 29;\n    this.hash();\n  };\n\n  Md5.prototype.hash = function () {\n    var a, b, c, d, bc, da, blocks = this.blocks;\n\n    if (this.first) {\n      a = blocks[0] - 680876937;\n      a = (a << 7 | a >>> 25) - 271733879 << 0;\n      d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;\n      b = (b << 22 | b >>> 10) + c << 0;\n    } else {\n      a = this.h0;\n      b = this.h1;\n      c = this.h2;\n      d = this.h3;\n      a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;\n      a = (a << 7 | a >>> 25) + b << 0;\n      d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;\n      b = (b << 22 | b >>> 10) + c << 0;\n    }\n\n    a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;\n    b = (b << 20 | b >>> 12) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[5] - 378558;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[8] - 2022574463;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[11] + 1839030562;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[14] - 35309556;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[1] - 1530992060;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[4] + 1272893353;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[7] - 155497632;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[10] - 1094730640;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[13] + 681279174;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[0] - 358537222;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[3] - 722521979;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[6] + 76029189;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[9] - 640364487;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[12] - 421815835;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[15] + 530742520;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[2] - 995338651;\n    b = (b << 23 | b >>> 9) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[0] - 198630844;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[7] + 1126891415;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[14] - 1416354905;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[5] - 57434055;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[12] + 1700485571;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[3] - 1894986606;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[10] - 1051523;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[1] - 2054922799;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[8] + 1873313359;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[15] - 30611744;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[6] - 1560198380;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[13] + 1309151649;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[4] - 145523070;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[11] - 1120210379;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[2] + 718787259;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[9] - 343485551;\n    b = (b << 21 | b >>> 11) + c << 0;\n\n    if (this.first) {\n      this.h0 = a + 1732584193 << 0;\n      this.h1 = b - 271733879 << 0;\n      this.h2 = c - 1732584194 << 0;\n      this.h3 = d + 271733878 << 0;\n      this.first = false;\n    } else {\n      this.h0 = this.h0 + a << 0;\n      this.h1 = this.h1 + b << 0;\n      this.h2 = this.h2 + c << 0;\n      this.h3 = this.h3 + d << 0;\n    }\n  };\n\n  /**\n   * @method hex\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.hex();\n   */\n  Md5.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n\n    return HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F];\n  };\n\n  /**\n   * @method toString\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.toString();\n   */\n  Md5.prototype.toString = Md5.prototype.hex;\n\n  /**\n   * @method digest\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.digest}\n   * @example\n   * hash.digest();\n   */\n  Md5.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n    return [\n      h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 24) & 0xFF,\n      h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 24) & 0xFF,\n      h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 24) & 0xFF,\n      h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 24) & 0xFF\n    ];\n  };\n\n  /**\n   * @method array\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.array}\n   * @example\n   * hash.array();\n   */\n  Md5.prototype.array = Md5.prototype.digest;\n\n  /**\n   * @method arrayBuffer\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.arrayBuffer}\n   * @example\n   * hash.arrayBuffer();\n   */\n  Md5.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(16);\n    var blocks = new Uint32Array(buffer);\n    blocks[0] = this.h0;\n    blocks[1] = this.h1;\n    blocks[2] = this.h2;\n    blocks[3] = this.h3;\n    return buffer;\n  };\n\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.buffer}\n   * @example\n   * hash.buffer();\n   */\n  Md5.prototype.buffer = Md5.prototype.arrayBuffer;\n\n  /**\n   * @method base64\n   * @memberof Md5\n   * @instance\n   * @description Output hash as base64 string\n   * @returns {String} base64 string\n   * @see {@link md5.base64}\n   * @example\n   * hash.base64();\n   */\n  Md5.prototype.base64 = function () {\n    var v1, v2, v3, base64Str = '', bytes = this.array();\n    for (var i = 0; i < 15;) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i++];\n      base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n        BASE64_ENCODE_CHAR[(v1 << 4 | v2 >>> 4) & 63] +\n        BASE64_ENCODE_CHAR[(v2 << 2 | v3 >>> 6) & 63] +\n        BASE64_ENCODE_CHAR[v3 & 63];\n    }\n    v1 = bytes[i];\n    base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n      BASE64_ENCODE_CHAR[(v1 << 4) & 63] +\n      '==';\n    return base64Str;\n  };\n\n  var exports = createMethod();\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    /**\n     * @method md5\b\n     * @description Md5 hash function, export to global in browsers.\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n     * @returns {String} md5 hashes\n     * @example\n     * md5(''); // d41d8cd98f00b204e9800998ecf8427e\n     * md5('The quick brown fox jumps over the lazy dog'); // 9e107d9d372bb6826bd81d3542a419d6\n     * md5('The quick brown fox jumps over the lazy dog.'); // e4d909c290d0fb1ca068ffaddf22cbd0\n     *\n     * // It also supports UTF-8 encoding\n     * md5('中文'); // a7bac2239fcdcb3a067903d8077c4a07\n     *\n     * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`\n     * md5([]); // d41d8cd98f00b204e9800998ecf8427e\n     * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e\n     */\n    root.md5 = exports;\n    if (AMD) {\n      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n        return exports;\n      }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n  }\n})();\n\n\n//# sourceURL=webpack://fog.vicc.wang/./node_modules/js-md5/src/md5.js?");

/***/ }),

/***/ "./www/js/LExtend/FogLayer8192.js":
/*!****************************************!*\
  !*** ./www/js/LExtend/FogLayer8192.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FogLayer8192)\n/* harmony export */ });\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! leaflet */ \"leaflet\");\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(leaflet__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _database_indexeddb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../database/indexeddb */ \"./www/js/database/indexeddb.js\");\n/* harmony import */ var _render_webGLClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../render/webGLClass */ \"./www/js/render/webGLClass.js\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/math */ \"./www/js/utils/math.js\");\n/* harmony import */ var _utils_id__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/id */ \"./www/js/utils/id.js\");\n/**\r\n * 分为3个级别来渲染,9,12,15\r\n * GLOBAL级别：512 x 128\r\n * TILE级别：128 x 64\r\n * 问题：加载速度慢\r\n * 考虑：\r\n * 1，分为更多级别，已实现\r\n * 2，解析为线条：TODO\r\n * \r\n */\r\n// @ts-check\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst TileCnt = 512;\r\nconst TileDataSize = 128;\r\nconst TileSize = 256; // 单个块的宽度\r\nconst gDataSize = 512 * 128; // 全局数据块的宽度\r\n\r\nclass FogLayer8192 extends (leaflet__WEBPACK_IMPORTED_MODULE_0___default().Layer) {\r\n    constructor(opts){\r\n        super(opts);\r\n\r\n        // 显示在屏幕上的canvas\r\n        // 在css中有定义了transform-origin\r\n        this.canvas = leaflet__WEBPACK_IMPORTED_MODULE_0___default().DomUtil.create(\"canvas\", \"fogLayer\");\r\n\r\n        // 绘制用的webGL\r\n        this.webGL = new _render_webGLClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.canvas, {bufferSize: 32*1024*1024});\r\n        this.webGL.setColor(0, 0.8, 0, 0.8);\r\n\r\n        // 每一个屏幕点后面的像素点数量\r\n        this.setPixelRatio(1.5);\r\n\r\n        // 当zoom < globalRenderZoom 时，使用global render\r\n        this.globalRenderZoom = 7;\r\n\r\n        /**屏幕左上角坐标 \r\n         * @type {L.Point} */\r\n        this.pixelTL; \r\n\r\n        // 存储所有可用的tileID\r\n        this.tileIDs = [];\r\n\r\n        /**用于加载\r\n         * @type {Set<String>} */ \r\n        this.toLoadTileList = new Set();\r\n\r\n        /**用于表示数据库中不存在的数据\r\n         * @type {Set<String>}  */\r\n        this.noDataTileList = new Set();\r\n\r\n        /**\r\n         * 记录更新以后的frame id，在加载完所有数据的20ms后更新\r\n         * @type {Number}\r\n         */\r\n        this.updateFrameID;\r\n\r\n        /**\r\n         * 加载的地图像素点坐标\r\n         * @type {L.Point} \r\n         */\r\n        this.pixelOrigin;\r\n\r\n        /**\r\n         * 绘制模式\r\n         * fog：迷雾模式\r\n         * line：线条模式\r\n         * @type {String}\r\n         */\r\n        this.renderMode = \"fog\";\r\n\r\n        /**\r\n         * 线段粗细 1 ~ 10\r\n         * @type {Number}\r\n         */\r\n        this.lineWidth = 2;\r\n\r\n        this.reloadAllFromDB(); // from db\r\n    }\r\n\r\n    /**\r\n     * 每一个屏幕点后面的像素点数量\r\n     * @param {Number} ratio 像素比率\r\n     */\r\n    setPixelRatio(ratio){ \r\n        this.ratio = ratio;\r\n        this.webGL.setPixelRatio(ratio);\r\n    }\r\n    get scale() {return 1 / this.ratio; }\r\n    setGlobalRenderZoom(zoom){ this.globalRenderZoom = zoom; }\r\n\r\n    // 获取当前每个像素点表示全局数据点数量\r\n    getGlobalDPP(z){\r\n        z = z || this.zoom;\r\n        return Math.pow(2, 8-z);\r\n        // return gDataSize/(TileSize * Math.pow(2, z));\r\n    }\r\n\r\n    /**\r\n     * 当加入到视图时触发\r\n     * @param {L.Map} map \r\n     * @returns \r\n     */\r\n    onAdd (map) {\r\n        this.map = map;\r\n        \r\n        // @ts-ignore\r\n        let pane = map.getPane(this.options.pane);\r\n        this.pane = pane;\r\n        this.pane.appendChild(this.canvas);\r\n\r\n        map.on('move', this._update, this); \r\n        map.on('resize', this._resize, this);\r\n        map.on('zoomanim', this._zoomanim, this);\r\n\r\n        this.zoom = map.getZoom();\r\n        this.updatePointSize();\r\n        this._resize();\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    // @ts-ignore\r\n    onRemove(map) {\r\n        leaflet__WEBPACK_IMPORTED_MODULE_0___default().DomUtil.remove(this.canvas);\r\n\r\n        map.off('move', this._update, this); \r\n        map.off('resize', this._resize, this);\r\n        map.off('zoomanim', this._zoomanim, this);\r\n\r\n        return this;\r\n    }\r\n\r\n    loadBufferDataAndThenUpdate(bufferID){\r\n        if(this.toLoadTileList.has(bufferID)) return; // 已经在加载了\r\n\r\n        this.toLoadTileList.add(bufferID);\r\n\r\n        let layer = this;\r\n        _database_indexeddb__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getBufferData(bufferID, function(pointsArray){\r\n            \r\n            layer.toLoadTileList.delete(bufferID);\r\n\r\n            // 不在数据库中\r\n            if(pointsArray == null){\r\n                layer.noDataTileList.add(bufferID);\r\n                return;\r\n            }\r\n\r\n            layer.webGL.setBufferInfo(bufferID, pointsArray);\r\n            \r\n            if(layer.toLoadTileList.size == 0){\r\n                layer._render(\"loadBufferDataAndThenUpdate\");\r\n            };\r\n        })\r\n\r\n    }\r\n\r\n\r\n    _zoomanim (event){\r\n        if(this.animFrameID){\r\n            leaflet__WEBPACK_IMPORTED_MODULE_0___default().Util.cancelAnimFrame(this.animFrameID);\r\n            this._updateGlobalPosition();\r\n        }\r\n        // if (Device.isPhone()) return;\r\n        let startCenter = this.centerLatLng.clone(); // this is for zoom animation\r\n        let startZoom = this.zoom;\r\n\r\n        let endCenter = event.center;\r\n        let endZoom = event.zoom;\r\n\r\n        let sttPoint = this.map.project(startCenter, 10);\r\n        let endPoint = this.map.project(endCenter, 10);\r\n\r\n        let startTime;\r\n        let layer = this;\r\n\r\n        let AnimationTime = 250; // ms\r\n        let lastTime;\r\n\r\n        function animate(timestamp){\r\n            if (startTime === undefined) {\r\n                startTime = timestamp;\r\n                lastTime = timestamp;\r\n            }\r\n\r\n            const elapsed = timestamp - startTime;\r\n\r\n            // animation finished\r\n            if(elapsed  > AnimationTime){\r\n                layer.zoom = layer.map.getZoom();\r\n                layer.updatePointSize();\r\n                layer._update();\r\n                return; // Stop the animation after 250 ms\r\n            }\r\n \r\n            let t = elapsed/AnimationTime;\r\n            \r\n            // CubicBezierCurve 比例 t = > tt\r\n            let t1 = _utils_math__WEBPACK_IMPORTED_MODULE_3__.CubicBezierCurve(0.25, 1, 1, 1, t);\r\n\r\n            let aniPoint = sttPoint.multiplyBy(1-t1).add(endPoint.multiplyBy(t1));\r\n            let animCenter = layer.map.unproject(aniPoint, 10);\r\n            layer.centerLatLng = animCenter;\r\n\r\n            let tt = _utils_math__WEBPACK_IMPORTED_MODULE_3__.CubicBezierCurve(0.25, 1, 1, 1, t);\r\n            layer.zoom = startZoom * (1-tt) + endZoom * tt;\r\n\r\n            layer.updatePointSize();\r\n\r\n            // @ts-ignore\r\n\r\n            layer.pixelTL = layer.map.getPixelBounds(animCenter, layer.zoom).min;\r\n            layer.dataPerPixel = layer.getGlobalDPP();\r\n\r\n            layer.gDataStart = layer.pixelTL.multiplyBy(layer.dataPerPixel);\r\n            layer.dataSize = layer.viewSize.multiplyBy(layer.dataPerPixel);\r\n\r\n            layer._render(event);\r\n\r\n            layer.animFrameID = leaflet__WEBPACK_IMPORTED_MODULE_0___default().Util.requestAnimFrame(animate);\r\n        }\r\n        this.animFrameID = leaflet__WEBPACK_IMPORTED_MODULE_0___default().Util.requestAnimFrame(animate); \r\n        return;\r\n    }\r\n\r\n    /**\r\n     * 绘制区域数据，参数：的数据区域和大小\r\n     */\r\n    // @ts-ignore\r\n    _render(event){\r\n        if(this.renderMode == \"fog\"){\r\n            this.webGL.coverWithFog();\r\n        } else {\r\n            this.webGL.clear();\r\n        }\r\n\r\n        let tileIDs = this.filterTiles();\r\n        let dpp = this.getGlobalDPP();\r\n        let viewPortSize = TileDataSize / dpp;\r\n\r\n        // 每个tile点对应的解析出来的像素数量\r\n        let dataPixel = 64;\r\n\r\n        if (this.zoom <= this.globalRenderZoom + 3) {\r\n            dataPixel = 8;\r\n        } else if (this.zoom <= this.globalRenderZoom) {\r\n            dataPixel = 1;\r\n        }\r\n\r\n        // be Carefull, gDataStart is changeing\r\n        tileIDs.forEach(tileID => {\r\n\r\n            let vpStart = _utils_math__WEBPACK_IMPORTED_MODULE_3__.i2p(tileID, 9)\r\n                            .add([0, 1]) // left bottom:  viewport  start\r\n                            .multiplyBy(TileDataSize)\r\n                            .divideBy(dpp)\r\n                            .subtract(this.pixelTL)\r\n\r\n            vpStart.y = this.viewSize.y  - vpStart.y;\r\n\r\n            \r\n            let p = _utils_math__WEBPACK_IMPORTED_MODULE_3__.i2p(tileID, 9)\r\n            let bufferID = _utils_id__WEBPACK_IMPORTED_MODULE_4__.tileID(dataPixel, p.x, p.y, 9);\r\n            \r\n            // 数据库中没有\r\n            if(this.noDataTileList.has(bufferID)) return;\r\n\r\n            let viewportX=vpStart.x, \r\n                viewportY=vpStart.y, \r\n                viewportW=viewPortSize, \r\n                viewportH=viewPortSize;\r\n\r\n            let tX = 0,\r\n                tY = 0,\r\n                tW = TileDataSize * dataPixel,\r\n                tH = TileDataSize * dataPixel;\r\n\r\n            let left=0, right=0;\r\n            let top=0, bottom=0;\r\n\r\n            if(vpStart.x < 0){\r\n                left = - vpStart.x / viewPortSize;\r\n                viewportX = 0;\r\n            }\r\n            if (vpStart.x + viewPortSize > 8192){ // 8192: max pixel size\r\n                right = (vpStart.x + viewPortSize - this.viewSize.x) / viewPortSize;\r\n            }\r\n\r\n            viewportW = viewPortSize * (1-left-right);\r\n            tX = tW * left;\r\n            tW = tW * (1-left-right);\r\n\r\n            if(vpStart.y < 0){\r\n                bottom = - vpStart.y / viewPortSize;\r\n                viewportY = 0;\r\n                // tY = 0; always 0\r\n            }\r\n            \r\n            if (vpStart.y + viewPortSize > 8192){\r\n                top = (vpStart.y + viewPortSize - this.viewSize.y) / viewPortSize;\r\n                tY = tH * top;\r\n            }\r\n\r\n            viewportH = viewPortSize * (1-bottom-top);\r\n            tH = tH * (1-bottom-top);\r\n\r\n            this.webGL.setViewport(viewportX, viewportY, viewportW, viewportH);\r\n            this.webGL.setTransform(tX, tY, tW, tH);\r\n\r\n            this.renderBuffer(bufferID);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 按照Buffer来绘制\r\n     * @param {String} bufferID \r\n     */\r\n    renderBuffer(bufferID){\r\n        if(this.webGL.bufferMNG.hasBuffer(bufferID)){\r\n            if(this.renderMode == \"fog\"){\r\n                this.webGL.renderBufferInFog(bufferID);\r\n            } else {\r\n                this.webGL.renderBuffer(bufferID);\r\n            }\r\n            \r\n        } else {\r\n            this.loadBufferDataAndThenUpdate(bufferID);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 找到对应的地图id们\r\n     * @returns {Array<Number>}\r\n     */\r\n    filterTiles(){\r\n        let min = this.gDataStart.divideBy(TileDataSize).subtract([1, 1]);\r\n        let max = this.gDataStart.add(this.dataSize).divideBy(TileDataSize);\r\n        let viewTileBound = new (leaflet__WEBPACK_IMPORTED_MODULE_0___default().Bounds)(min, max);\r\n\r\n        return this.tileIDs.filter(tileID => {\r\n            let x = tileID % TileCnt;\r\n            let y = Math.floor(tileID / TileCnt);\r\n            return viewTileBound.contains([x, y]);\r\n        })\r\n    }\r\n\r\n    _resize(event) {\r\n        // 窗口大小变化\r\n        this.viewSize = this.map.getPixelBounds().getSize();\r\n\r\n        this.webGL.setCanvasSize(this.viewSize.x, this.viewSize.y);\r\n\r\n        this.canvas.style.width = String(this.viewSize.x);\r\n        this.canvas.style.height = String(this.viewSize.y);\r\n\r\n        // this.webGL.setViewport(0, 0, this.viewSize.x, this.viewSize.y);\r\n        this._update(event);\r\n    }\r\n\r\n    setLineWidth(lineWidth){\r\n        this.lineWidth = lineWidth;\r\n    }\r\n\r\n    updatePointSize(){\r\n        this.pointSize = 1 * this.lineWidth * this.ratio;\r\n        if(this.pointSize < 1) this.pointSize = 1;\r\n\r\n        if(this.zoom < this.globalRenderZoom){\r\n            this.pointSize += this.zoom / 6;\r\n        } else if (this.zoom < this.globalRenderZoom + 3) {\r\n            this.pointSize += (this.zoom - this.globalRenderZoom) / 3;\r\n        } else if (this.zoom < this.globalRenderZoom + 6) {\r\n            this.pointSize += (this.zoom - this.globalRenderZoom - 3) / 3;\r\n        }\r\n\r\n        if(this.zoom > 14) this.pointSize *= Math.pow(2, this.zoom - 14)\r\n        this.webGL.setPointSize(this.pointSize);\r\n    }\r\n\r\n    _updateGlobalPosition(){\r\n        this.pixelBounds = this.map.getPixelBounds();\r\n        this.orginOffset = this.map.getPixelOrigin()\r\n                                   .subtract(this.pixelBounds.min)\r\n                                   .multiplyBy(-1);\r\n\r\n        this.centerLatLng = this.map.getCenter();\r\n\r\n        this.pixelTL = this.map.getPixelBounds().min;\r\n\r\n\r\n        this.dataPerPixel = this.getGlobalDPP();\r\n\r\n        this.gDataStart = this.pixelTL.multiplyBy(this.dataPerPixel);\r\n\r\n        this.dataSize = this.viewSize.multiplyBy(this.dataPerPixel);\r\n\r\n\r\n    }\r\n\r\n    _update(event) {\r\n        this._updateGlobalPosition();\r\n\r\n        // 保持Canvas位置靠左上角\r\n        // 保持Canvas 缩放为 1/ this.ratio\r\n        leaflet__WEBPACK_IMPORTED_MODULE_0___default().DomUtil.setTransform(this.canvas, this.orginOffset, this.scale);\r\n        // 绘制\r\n        this._render(event);\r\n    }\r\n\r\n    redraw(){\r\n        this.updatePointSize();\r\n        this._resize();\r\n    };\r\n\r\n    reloadAllFromDB(){\r\n        let layer = this; \r\n        this.noDataTileList.clear();\r\n        this.webGL.bufferMNG.clearAllBuffer();\r\n        _database_indexeddb__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get('TileIDS', function(value){\r\n            layer.tileIDs = value || [];\r\n            layer.redraw();\r\n        })\r\n    }\r\n}\n\n//# sourceURL=webpack://fog.vicc.wang/./www/js/LExtend/FogLayer8192.js?");

/***/ }),

/***/ "./www/js/data/block64.js":
/*!********************************!*\
  !*** ./www/js/data/block64.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Block64)\n/* harmony export */ });\n/* harmony import */ var _pixel64__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pixel64 */ \"./www/js/data/pixel64.js\");\n/* harmony import */ var _utils_coords__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/coords */ \"./www/js/utils/coords.js\");\n/* harmony import */ var _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/arraybuffer */ \"./www/js/utils/arraybuffer.js\");\n/**\r\n * 用来记录迷雾数据的block，64x64大小\r\n * tile: 所需的tile\r\n * x、y：block所在tile的位置\r\n * area：已解锁的面积\r\n */\r\n\r\n// @ts-check\r\n\r\n\r\n// import bmp from 'fast-bmp';\r\n\r\n\r\nconst BLOCKSIZE = 64;\r\nconst U8COL = 8;\r\n\r\nconst BLOCK_TILE_ZOOM = 7; // 128\r\nconst BLOCK_ZOOM = 9 + 7; // 512 x 128\r\n\r\nclass Block64 extends _pixel64__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n    /** \r\n     * @param {Uint8Array} u8array\r\n     **/\r\n    constructor(u8array=new Uint8Array(64*64/8)){\r\n        super(u8array);\r\n        this.updateArea(); // 每次变化需要更新\r\n\r\n        // 64, 32, 16, 8, 4, 2\r\n        this.points = {};\r\n\r\n    }\r\n\r\n    /** 复制一个Block\r\n     * @override \r\n     * @returns {Block64}\r\n     */\r\n    clone(){ return new Block64(this.u8array); }\r\n\r\n    updateArea(){\r\n        this.area = this.countPixels();\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @param {Block64} block \r\n     */\r\n    merge(block){        \r\n        super.merge(block);\r\n        this.updateArea();\r\n    }\r\n\r\n    /**\r\n     * 返回一个64x64的1bit深度的bmp图像\r\n     * @returns {imageData}\r\n     */\r\n    getBMPBuff(){\r\n        const imageData = {\r\n            width: BLOCKSIZE,\r\n            height: BLOCKSIZE,\r\n            data: this.u8array,\r\n            bitDepth: 1,\r\n            components: 1,\r\n            channels: 1\r\n        }\r\n\r\n        return bmp.encode(imageData);\r\n    }\r\n\r\n    /** 返回一个 24位深度 的ImageData基础格式\r\n     * @returns {Uint8ClampedArray}\r\n     */\r\n    getRawImageBuffer(){\r\n        let u8c = new Uint8ClampedArray(BLOCKSIZE*BLOCKSIZE*4);\r\n        let u8 = this.u8array;\r\n    \r\n        for (let i = 0; i <= u8.length; i++) {\r\n            let n = u8[i];\r\n            if(n==0) continue;\r\n\r\n            for(let j=0; j<8; j++){\r\n                if(n & (0x80 >> j)) {\r\n                    let idx = ((i*8)+j)*4;\r\n                    // u8c[idx + 0] = 255;\r\n                    // u8c[idx + 1] = 255;\r\n                    // u8c[idx + 2] = 100;\r\n                    u8c[idx + 3] = 255; // alpha\r\n                }\r\n            }\r\n        }\r\n        return u8c;\r\n    }\r\n\r\n    /** 绘制在canvas上 \r\n     * @return {ImageData} imgData\r\n    */\r\n     getImageData(){\r\n        return new ImageData(this.getRawImageBuffer(), BLOCKSIZE);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Buffer} imageData \r\n     * @param {number} width \r\n     * @param {number} height \r\n     * @param {number} offsetX \r\n     * @param {number} offsetY \r\n     */\r\n    copyTo(imageData, width, height, offsetX, offsetY){\r\n        let u8 = this.u8array;\r\n    \r\n        for (let i = 0; i <= u8.length; i++) {\r\n            let n = u8[i];\r\n            if(n==0) continue;\r\n\r\n            for(let j=0; j<8; j++){\r\n                if(n & (0x80 >> j)) {\r\n                    let px = offsetX + ((i*8)+j)%64;\r\n                    let py = offsetY + Math.floor(i/8);\r\n\r\n                    let idx = (py*width + px)*4; // 4 bytes\r\n\r\n                    imageData[idx + 3] = 255; // alpha\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 绘制在一个大点阵图上 \r\n     * @param {Uint8Array} u8array // 需要为长宽一致的点阵图\r\n     * @param {number} ox   // x偏移量\r\n     * @param {number} oy   // y偏移量\r\n     * @param {number} size // u8array 点阵图边长 \r\n    */\r\n    blit(u8array, ox, oy, size=64){\r\n        let u8 = this.u8array;\r\n    \r\n        for (let i = 0; i <= u8.length; i++) {\r\n            let n = u8[i];\r\n            if(n==0) continue;\r\n\r\n            let x = ox + (i*8) % BLOCKSIZE;\r\n            let y = oy + Math.floor( i*8 / BLOCKSIZE);\r\n\r\n            let idx = (y*size + x) / 8; // 像素除以8\r\n\r\n            u8array[idx] = u8[i]; // alpha\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 用于合并Z->z, 合并到1/4角落里， t-top, b-bottom, l-left, r-right\r\n     * @param {Block64} block \r\n     * @param {String} pos 'tl tr bl br'\r\n     */\r\n    partMerge(block, pos){\r\n        let oy = pos[0] == 't' ? 0 : BLOCKSIZE / 2;\r\n        let ox = pos[1] == 'l' ? 0 : U8COL / 2;\r\n\r\n        for(let i=0; i<block.u8array.length; i++){\r\n            let v = block.u8array[i];\r\n            if(!v) continue;\r\n    \r\n            v = ((v >> 1) | v) & 0b01010101;\r\n            v = parseInt(v.toString(4), 2);\r\n    \r\n            let x = ox + Math.floor(i % U8COL / 2);\r\n            let y = oy + Math.floor(i / U8COL / 2);\r\n    \r\n            let fi = x + y * U8COL;\r\n    \r\n            if (i%2){\r\n                this.u8array[fi] = this.u8array[fi] | v;\r\n            } else {\r\n                this.u8array[fi] = this.u8array[fi] | (v << 4);\r\n            }\r\n        }\r\n\r\n        this.updateArea();\r\n    }\r\n\r\n    // 预估占用的内存，单位Byte\r\n    get memory(){\r\n        return 512;\r\n    }\r\n\r\n    updatePoints(){\r\n        this.points[64] = this.toPoints();\r\n        let n = 64;\r\n        while(n >= 4){\r\n            this.points[n/2] = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_2__.subPoints(this.points[n])\r\n            n = n / 2;\r\n        }\r\n    }\r\n\r\n    getPoints(size){\r\n        if(!this.points[size]) this.updatePoints();\r\n        return this.points[size];\r\n    }\r\n\r\n    /** 生成Potrace格式 */\r\n    blitPotraceData(u8array, ox, oy, PIXELS){\r\n        let v;\r\n        for (let i=0; i<this.u8array.length; i++){\r\n            v = this.u8array[i];\r\n            if(v==0) continue;\r\n\r\n            let b=7;\r\n            let y = Math.floor(i*8/64);\r\n\r\n            while(v){\r\n                if(v&1){\r\n                    let x = (i*8 % 64) + b;\r\n                    let idx  = (y+oy)*PIXELS + (ox+x);\r\n                    u8array[idx] = 1; // 1 for potrace js\r\n                }\r\n                v >>= 1;\r\n                b --;\r\n            }\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://fog.vicc.wang/./www/js/data/block64.js?");

/***/ }),

/***/ "./www/js/data/pixel64.js":
/*!********************************!*\
  !*** ./www/js/data/pixel64.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Pixel64)\n/* harmony export */ });\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/math */ \"./www/js/utils/math.js\");\n// Fog Data 64\r\n// 代表迷雾的像素数据，每一块代表一个64x64的小块\r\n// 64\r\n// 点阵图\t\t\t\t用 ArrayData 来表示 \r\n// ......***..........  0x01a00000\r\n// .......***.........\r\n// ........***........\r\n// ...\r\n// Author: Vic Wang\r\n// Create Date: 2021-09-26\r\n\r\n\r\n// @ts-check\r\n// import 'leaflet';\r\n\r\n\r\nclass Pixel64 {\r\n    static pixelSize = 64;\r\n    static u8size = 8;\r\n    static u8Col = Pixel64.pixelSize/Pixel64.u8size; // 8\r\n    static u8Row = Pixel64.pixelSize;\r\n    static arraySize = Pixel64.pixelSize*Pixel64.u8Col; // 64*8\r\n\r\n    /** \r\n     * 初始化\r\n     * 必须提供一段 64 x 8 的 uInt8Array\r\n     * @param {Uint8Array} u8array \r\n     **/\r\n    constructor(u8array) {\r\n        if(!u8array || u8array.length != Pixel64.arraySize){\r\n            this.u8array = new Uint8Array(Pixel64.arraySize);\r\n        } else {\r\n            this.u8array = u8array.slice(); // copy\r\n        }\r\n    }\r\n\r\n    /** \r\n     * 更换u8array\r\n     * 必须提供一段 64 x 8 的 uInt8Array\r\n     * @param {Uint8Array} u8array \r\n     **/\r\n    fromU8Array(u8array){\r\n        if (u8array.length != Pixel64.arraySize){\r\n            console.log(\"wrong init uint8Arry size\");\r\n        } else {\r\n            this.u8array = u8array.slice(); // copy\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取像素点数量\r\n     * @returns {number}\r\n     */\r\n    countPixels(){\r\n        let _cnt = 0, v;\r\n        for (let i=0; i<this.u8array.length; i++){\r\n            v = this.u8array[i];\r\n            while(v){\r\n                _cnt += v&1;\r\n                v >>= 1;\r\n            }\r\n        }\r\n        return _cnt;   \r\n    }\r\n\r\n    // 返回64x64坐标系的pointArray\r\n    toPoints(){\r\n        let points = [];\r\n        let _cnt = 0, v;\r\n        for (let i=0; i<this.u8array.length; i++){\r\n            v = this.u8array[i];\r\n            if(v==0) continue;\r\n\r\n            let b=7;\r\n            let y = Math.floor(i*8/64);\r\n\r\n            while(v){\r\n                if(v&1){\r\n                    let x = (i*8 % 64) + b;\r\n                    points.push(x, y);\r\n                }\r\n                v >>= 1;\r\n                b --;\r\n            }\r\n        }\r\n        return Uint16Array.from(points);           \r\n    }\r\n\r\n    // 返回64x64坐标系的pointArray, Uint8Array\r\n    toPoints256(){\r\n        let points = [];\r\n        let _cnt = 0, v;\r\n        for (let i=0; i<this.u8array.length; i++){\r\n            v = this.u8array[i];\r\n            if(v==0) continue;\r\n\r\n            let b=7;\r\n            let y = Math.floor(i*8/64);\r\n\r\n            while(v){\r\n                if(v&1){\r\n                    let x = (i*8 % 64) + b;\r\n                    points.push(x, y);\r\n                }\r\n                v >>= 1;\r\n                b --;\r\n            }\r\n        }\r\n        return Uint8Array.from(points);           \r\n    }\r\n\r\n    // 返回8x8坐标系的pointArray\r\n    toPoints8(){\r\n        let points = [];\r\n\r\n        for(let x=0; x<8; x++){\r\n            for(let y=0; y<8; y++){\r\n                for(let k=0; k<64; k+=8){ // 向下找\r\n                    let i = _utils_math__WEBPACK_IMPORTED_MODULE_0__.p2i({x, y}, 6) // z:6, zn:64\r\n                    if(this.u8array[i+k] > 0){\r\n                        points.push(x, y);\r\n                        break;\r\n                    }\r\n                } \r\n            }\r\n        }\r\n\r\n        return Uint16Array.from(points);            \r\n    }\r\n\r\n    /**\r\n     * 设置x、y处的值\r\n     * x方向，左到右增加\r\n     * y方向，上到下增加\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {boolean} value\r\n     */\r\n    setXY(x, y, value=true) {\r\n        let idx = y * Pixel64.u8Col + (x >> 3);\r\n        let dx = x % 8;\r\n\r\n        if(value){\r\n            this.u8array[idx] |= (0b10000000>>dx);\r\n        } else {\r\n            this.u8array[idx] &= (0b11111111 ^ (0b10000000>>dx));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 以字符串的形式打印出来完整的64x64像素图\r\n     * @param {number} level\r\n     */\r\n    printPixel(level=0){\r\n        let pixelString = \"\";\r\n    \r\n        for(let i=0; i<Pixel64.arraySize; i++){\r\n\r\n            if(i % Pixel64.u8Col == 0) {\r\n                console.log(pixelString);\r\n                pixelString = \"\";\r\n            }\r\n\r\n            if(this.u8array[i]==0){\r\n                pixelString += \"........\";\r\n                continue;\r\n            }\r\n\r\n            for(let j=0; j<8; j++){\r\n\r\n                if(this.u8array[i] & (0b10000000>>j)){\r\n                    pixelString += \"*\";\r\n                } else {\r\n                    pixelString += \".\";\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 以8x8的形式打印出来简化的像素图\r\n     */\r\n    printPixel8(){\r\n        for(let i=0; i<8; i++){\r\n            let pixelString = \"\";\r\n\r\n            for(let j=0; j<8; j++){\r\n                \r\n                for(let k=0; k<8; k++){\r\n                    if(this.u8array[i*64+k*8+j]){\r\n                        pixelString += \"*\";\r\n                        break;\r\n                    }\r\n\r\n                    if(k==7) pixelString += \".\";\r\n                } \r\n            }\r\n\r\n            console.log(pixelString);\r\n        }\r\n    }\r\n\r\n    /** 合并其他的Pixel64数据\r\n     * @param {Pixel64} p64\r\n     */\r\n    merge(p64){\r\n        if(!p64 || (p64.u8array.length != Pixel64.arraySize)) return;\r\n\r\n        for(let i=0; i<p64.u8array.length; i++){\r\n            this.u8array[i] = this.u8array[i] | p64.u8array[i];\r\n        }\r\n    }\r\n\r\n    /** 复制一个Pixel64\r\n     * @returns {Pixel64}\r\n     */\r\n     clone(){ return new Pixel64(this.u8array); }\r\n\r\n    /** 优化数据\r\n     * 把空白的地方填充上\r\n     * 比如：0b0101 -> 0b0111\r\n     * 又比如：\r\n     * 0111    0111    0111\r\n     * 0100 -> 0101 -> 0111\r\n     * 0101    0111    0111\r\n     */\r\n     fillZeroBetween1s(){\r\n        const u8Col = Pixel64.u8Col;\r\n        for(let i=0; i<this.u8array.length; i++){\r\n            if(this.u8array[i]){\r\n                let b = this.u8array[i];\r\n                let c = (b >> 1) & (b << 1); // 左移1个，右移1个，取并集\r\n                // console.log(c);\r\n                this.u8array[i] |= c;\r\n            }\r\n        }\r\n        for(let i=u8Col; i<this.u8array.length-u8Col; i++){\r\n            let b = this.u8array[i-u8Col] & this.u8array[i+u8Col];\r\n            if(b){\r\n                this.u8array[i] |= b;\r\n            }\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://fog.vicc.wang/./www/js/data/pixel64.js?");

/***/ }),

/***/ "./www/js/data/tile128.js":
/*!********************************!*\
  !*** ./www/js/data/tile128.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Tile128)\n/* harmony export */ });\n/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pako */ \"pako\");\n/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pako__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _block64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./block64 */ \"./www/js/data/block64.js\");\n/* harmony import */ var _pixel64__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pixel64 */ \"./www/js/data/pixel64.js\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/math */ \"./www/js/utils/math.js\");\n/* harmony import */ var _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/arraybuffer */ \"./www/js/utils/arraybuffer.js\");\n/* harmony import */ var _utils_id__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/id */ \"./www/js/utils/id.js\");\n/* harmony import */ var _utils_coords__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/coords */ \"./www/js/utils/coords.js\");\n/** tile 128x128\r\n * 代表迷雾的Tile数据，每一块代表一个128x128的图块\r\n * 每个点是一个64x64的pixel data 64\r\n * \r\n * 实际精度约在10m*cos维度 左右\r\n * \r\n * Author: Vic Wang\r\n * Create Date: 2021-09-26\r\n */\r\n\r\n// @ts-check\r\n\r\n// import zlib from 'zlib';\r\n\r\n// import bmp from 'fast-bmp';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PIXELS = 8192;\r\nconst TILE_COL = 512;\r\nconst BLOCK_COL = 128 // 迷雾存档中每行列长度\r\nconst U8_COL = BLOCK_COL/8 // 列数\r\nconst BLOCK_CNT = BLOCK_COL*BLOCK_COL // 128 x 128\r\nconst START_BYTES = BLOCK_COL*BLOCK_COL*2\r\n\r\nconst BLOCK_BIT = 64\r\nconst BLOCK_BYTES = BLOCK_BIT*BLOCK_BIT/8 // 64 x 64 / 8\r\nconst SUM_CHECK = 3\r\n\r\nconst TILE_ZOOM = 9; // 512\r\nconst BLOCK_ZOOM = 16; // 512 x 128\r\nconst SAVE_ZOOM = 8; // 256\r\nconst PIXEL_ZOOM = 22; // 512 x 128 x 64\r\nconst TILE_BLOCK_ZOOM = 7; // 128\r\n\r\nclass Tile128 {\r\n    static z = 9;\r\n    static size = 128*128;\r\n\r\n    /** \r\n     * z: 9\r\n     * size: 128 x 128\r\n     * @param {number} id;\r\n     **/\r\n    constructor(id) {\r\n        /** @type { Array<Block64> } */\r\n        this.blocks = new Array(BLOCK_CNT);\r\n\r\n        /** @type {number} */\r\n        this.id = id;\r\n\r\n        /** @type {number} */\r\n        this.area = 0;\r\n\r\n        /** @type {Object.<number, Uint16Array>} */\r\n        this.points = {};\r\n\r\n        /** @type {Uint8Array} */\r\n        this.u8array;\r\n\r\n        /** @type {Coords} */\r\n        this.coords = _utils_coords__WEBPACK_IMPORTED_MODULE_6__[\"default\"].fromID(id, TILE_ZOOM);\r\n    }\r\n\r\n\r\n    /** \r\n     * @param {Uint8Array} u8array \r\n     **/\r\n    fromFOW(u8array, type=\"\"){\r\n        this.u8array = u8array;\r\n        /** @type{Uint8Array} */\r\n        let data = pako__WEBPACK_IMPORTED_MODULE_0___default().inflate(u8array);\r\n        // let data = zlib.inflateSync(u8array);\r\n\r\n        for(let i=0; i<BLOCK_CNT; i++){\r\n            let row = data[i*2+1]*256 + data[i*2];\r\n\r\n            if(row == 0) continue\r\n\r\n            let start = START_BYTES + (BLOCK_BYTES + SUM_CHECK)*(row-1);\r\n            let end = start + BLOCK_BYTES;\r\n\r\n            // create a new u8array view\r\n            let u8array = data.slice(start, end);\r\n\r\n            this.blocks[i] = new _block64__WEBPACK_IMPORTED_MODULE_1__[\"default\"](u8array);\r\n            \r\n            // create zero blocks\r\n            if(this.blocks[i].area == 0) delete this.blocks[i];\r\n        }\r\n        \r\n        this.updateArea();\r\n    }\r\n\r\n    /** \r\n     * 从Uint16Array Points构造\r\n     * @param {Uint16Array} u16array \r\n     **/\r\n    fromPoints(u16array){\r\n        for(let i=0; i<u16array.length; i+=2){\r\n            let x = u16array[i];\r\n            let y = u16array[i+1];\r\n\r\n            let bx = Math.floor(x / 64); // BLOCK宽度\r\n            let by = Math.floor(y / 64);\r\n\r\n            let px = x % 64;\r\n            let py = y % 64;\r\n\r\n            if(this.getBlockByXY(bx, by) == null){\r\n                this._createBlockByXY(bx, by);\r\n            }\r\n\r\n            this.getBlockByXY(bx, by).setXY(px, py, true);\r\n        }\r\n        this.updateArea();\r\n    }\r\n\r\n    /** @return {number} */\r\n    countBlocks(){\r\n        return this.blocks.filter(block => block).length;\r\n    }\r\n\r\n    // 预估占用的内存，单位Byte\r\n    get memory(){\r\n        let _mem = 32; // 本身预估占用\r\n        this.blocks.forEach(block => _mem += block.memory);\r\n        return _mem;\r\n    }\r\n\r\n    get z(){\r\n        return 9;\r\n    }\r\n    get y(){\r\n        return Math.floor(this.id/512);\r\n    }\r\n    get x(){\r\n        return this.id % 512;\r\n    }\r\n\r\n    getTXwhenZ(z){ return Math.floor(this.x * Math.pow(2, z-9)) }\r\n    getTYwhenZ(z){ return Math.floor(this.y * Math.pow(2, z-9)) }\r\n\r\n    getXwhenZ(z){ return this.getTXwhenZ(z) * BLOCK_COL }\r\n    getYwhenZ(z){ return this.getTYwhenZ(z) * BLOCK_COL }\r\n\r\n    getBufferID(pixelSize){\r\n        return _utils_id__WEBPACK_IMPORTED_MODULE_5__.tileID(pixelSize, this.x, this.y, this.z);\r\n    }\r\n    \r\n    inside(coords){\r\n        let z = coords.z;\r\n        \r\n        return this.getTXwhenZ(z) == coords.x \r\n            && this.getTYwhenZ(z) == coords.y \r\n    }\r\n\r\n    getBlockIDwhenSize(id, size){\r\n        let pps = BLOCK_COL / size;\r\n\r\n        let x = id % BLOCK_COL / pps;\r\n        let y = id / BLOCK_COL / pps;\r\n\r\n        return size * Math.floor(y) + Math.floor(x);\r\n    };\r\n\r\n    /** 获得已解锁的面积 \r\n     * @returns {number} */\r\n    getRealArea(){\r\n        return _utils_math__WEBPACK_IMPORTED_MODULE_3__.getArea(Tile128.z, this.y, this.x) * this.area / (PIXELS*PIXELS);\r\n    }\r\n\r\n    /** \r\n     * 设置idx的block为u8array，覆盖原有数据\r\n     * @param {number} idx\r\n     * @param {Uint8Array} u8array \r\n     **/\r\n    setBlock(idx, u8array) {\r\n        // 如果已有面积，删除已有面积\r\n        if(this.blocks[idx]) this.area -= this.blocks[idx].area;\r\n\r\n        this.blocks[idx] = new _block64__WEBPACK_IMPORTED_MODULE_1__[\"default\"](u8array);\r\n        this.area += this.blocks[idx].area;\r\n    }\r\n\r\n    /** \r\n     * 使用x、y来获取block\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @return {Block64}\r\n     **/\r\n    getBlockByXY(x, y){\r\n        return this.blocks[x+y*128];\r\n    }\r\n\r\n    _createBlockByXY(x, y){\r\n        this.blocks[x+y*128] = new _block64__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n    }\r\n\r\n    /** 转为pako压缩后的Uint8Array格式，一般用于存储\r\n     * @returns {Uint8Array}\r\n     */\r\n    toUint8Array (){\r\n        let length = START_BYTES + (BLOCK_BYTES + SUM_CHECK) * this.countBlocks();\r\n        let u8array = new Uint8Array(length);\r\n\r\n        /**\r\n         * 从1开始 \r\n         * @type {number} */\r\n        let row = 1;\r\n\r\n        let blocks = this.blocks;\r\n        for(let i=0; i<BLOCK_CNT; i++){\r\n            \r\n            // undefined\r\n            if(blocks[i] == undefined) continue;\r\n            \r\n\r\n            u8array[i*2] = row % 256;\r\n            u8array[i*2+1] = Math.floor(row / 256);\r\n\r\n            let start = START_BYTES + (BLOCK_BYTES + SUM_CHECK)*(row-1);\r\n\r\n            u8array.set(blocks[i].u8array, start);\r\n            row+=1;\r\n            \r\n        }\r\n\r\n        return pako__WEBPACK_IMPORTED_MODULE_0___default().deflate(u8array);\r\n        // return zlib.deflateSync(u8array);\r\n    }\r\n\r\n    /**\r\n     * @param {Tile128} tile \r\n     */\r\n     merge(tile){\r\n        if(this.id != tile.id) return;\r\n\r\n        for(let i=0; i<BLOCK_CNT; i++){\r\n            if(this.blocks[i]){\r\n               this.blocks[i].merge(tile.blocks[i]);\r\n            } else if(tile.blocks[i]){\r\n                this.blocks[i] = new _block64__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n                this.blocks[i].merge(tile.blocks[i]);\r\n            } \r\n        }\r\n\r\n        // 重新计算面积\r\n        this.updateArea();\r\n    }\r\n\r\n    /** 重新计算面积 */\r\n    updateArea(){\r\n        let area = 0;\r\n        this.blocks.forEach(function(b){\r\n            area += b.area;\r\n        }); //.reduce((a, b) => a+b);\r\n        this.area = area;\r\n    }\r\n\r\n    /** 用于生成上一级地图 \r\n     * @param {Uint8Array} u8a\r\n     * @param {String} pos 'tl tr bl br'\r\n    */\r\n    mergeFOWBuffer(u8a, pos){\r\n        if(!u8a) return;\r\n        \r\n        /** @todo tile id undefined */\r\n        let tile = new Tile128(0);\r\n        tile.fromFOW(u8a);\r\n\r\n        let ofsBlockY = pos[0] == 't' ? 0 : BLOCK_COL / 2;\r\n        let ofsBlockX = pos[1] == 'l' ? 0 : BLOCK_COL / 2;\r\n\r\n        for(let i=0; i<tile.blocks.length; i++){\r\n            if(!tile.blocks[i]) continue;\r\n\r\n            let x = i % BLOCK_COL;\r\n            let y = Math.floor(i/BLOCK_COL);\r\n\r\n            // 合并后的位置\r\n            let blockPos = y%2 ? 'b' : 't';\r\n            blockPos    += x%2 ? 'r' : 'l';\r\n\r\n            let mergeY = Math.floor(y/2 + ofsBlockY);\r\n            let mergeX = Math.floor(x/2 + ofsBlockX);\r\n            let mergeI = mergeY * BLOCK_COL + mergeX;\r\n\r\n            // 如果没有，创建一个空的block\r\n            if(!this.blocks[mergeI]) this.blocks[mergeI] = new _block64__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n\r\n            this.blocks[mergeI].partMerge(tile.blocks[i], blockPos);\r\n        }\r\n\r\n        this.updateArea();\r\n    }\r\n\r\n    /** 生成BMP格式 */\r\n    getBMPBuff(){\r\n        let u8a = new Uint8Array(PIXELS*PIXELS/8);\r\n\r\n        for(let i=0; i<this.blocks.length; i++){\r\n            if(!this.blocks[i]) continue;\r\n\r\n            let ox = i % BLOCK_COL * _pixel64__WEBPACK_IMPORTED_MODULE_2__[\"default\"].pixelSize;\r\n            let oy = Math.floor(i / BLOCK_COL) * _pixel64__WEBPACK_IMPORTED_MODULE_2__[\"default\"].pixelSize;\r\n            this.blocks[i].blit(u8a, ox, oy, PIXELS);\r\n        }\r\n\r\n        const imageData = {\r\n            width: PIXELS,\r\n            height: PIXELS,\r\n            data: u8a,\r\n            bitDepth: 1,\r\n            components: 1,\r\n            channels: 1\r\n        }\r\n\r\n        return bmp.encode(imageData);\r\n    }\r\n\r\n    /** 优化数据\r\n     * 把空白的地方填充上\r\n     * 比如：0b0101 -> 0b0111\r\n     * 又比如：\r\n     * 0111    0111    0111\r\n     * 0100 -> 0101 -> 0111\r\n     * 0101    0111    0111\r\n     */\r\n     fillZeroBetween1s() {\r\n        for(let i=0; i<BLOCK_CNT; i++){\r\n            if(this.blocks[i]){\r\n                \r\n                this.blocks[i].fillZeroBetween1s();\r\n                this.blocks[i].updateArea();\r\n            }\r\n        }\r\n        this.updateArea();\r\n    }\r\n\r\n    /**\r\n     * 更新128x128图像点，坐标为0,0开始\r\n     */\r\n    updatePoints(){\r\n        this.points[128] = this.toOverviewPoints();\r\n        this.points[64] = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.subPoints(this.points[128]);\r\n        this.points[32] = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.subPoints(this.points[64]);\r\n        this.points[16] = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.subPoints(this.points[32]);\r\n        this.points[8] = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.subPoints(this.points[16]);\r\n        this.points[4] = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.subPoints(this.points[8]);\r\n        this.points[2] = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.subPoints(this.points[4]);\r\n        this.points[1] = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.subPoints(this.points[2]);\r\n    }\r\n\r\n    toOverviewPoints(){\r\n        let pointsArray = new Uint16Array(this.countBlocks() * 2);\r\n        let i = 0;\r\n        \r\n        this.blocks.forEach((v, id) => {\r\n            pointsArray[i*2] = id % 128;\r\n            pointsArray[i*2+1] = id / 128;  //auto to int\r\n            i++;\r\n        }) \r\n        return pointsArray;\r\n    }\r\n\r\n    toOverviewPointsWithOffset(){\r\n        let pointsArray = this.toOverviewPoints();\r\n        let dx = this.x * BLOCK_COL;\r\n        let dy = this.y * BLOCK_COL;\r\n        return _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.offsetPoints(pointsArray, dx, dy);\r\n    }\r\n\r\n    getPoints(size, dx, dy){\r\n        if(size <=128){\r\n            if(this.points[size] == null) this.updatePoints();\r\n\r\n            return _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.offsetPoints(this.points[size], dx, dy);\r\n        } \r\n\r\n        else {\r\n            let pointsArrayList = [];\r\n            let blockPointSize = size / BLOCK_COL; //2, 4, 8 ...\r\n\r\n            this.blocks.forEach((block, id) => {\r\n                let pointsArray = block.getPoints(blockPointSize);\r\n\r\n                let bdx = Math.floor(id % BLOCK_COL) * blockPointSize;\r\n                let bdy = Math.floor(id / BLOCK_COL) * blockPointSize;\r\n\r\n                pointsArray = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.offsetPoints(pointsArray, dx+bdx, dy+bdy);\r\n                pointsArrayList.push(pointsArray);\r\n            })\r\n            return _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.mergeUint16Array(pointsArrayList);\r\n        }\r\n\r\n    }\r\n\r\n    // coords z >= 9\r\n    getBlockPoints(coords, size){\r\n        let x = coords.x;\r\n        let y = coords.y;\r\n        let z = coords.z;\r\n\r\n        let dz = z - this.z;\r\n        let dn = Math.pow(2, dz); // 分成dn x dn块\r\n        let bn = (BLOCK_COL / dn); // block 数量\r\n\r\n        let bstartX = x % dn * bn;\r\n        let bstartY = y % dn * bn;\r\n\r\n        let pointsArrayList = [];\r\n        let blockPointSize = size / (BLOCK_COL / dn); // blockPointSize max: 64\r\n\r\n        this.blocks.forEach((block, id) => {\r\n            let bx = Math.floor(id % BLOCK_COL);\r\n            let by = Math.floor(id / BLOCK_COL);\r\n\r\n            if(bx < bstartX || bx >= bstartX + bn\r\n                || by < bstartY || by >= bstartY + bn) return;\r\n\r\n            let bdx = (bx - bstartX) * blockPointSize;\r\n            let bdy = (by - bstartY) * blockPointSize;\r\n\r\n            let pointsArray = block.getPoints(blockPointSize);\r\n\r\n            pointsArrayList.push(_utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.offsetPoints(pointsArray, bdx, bdy));\r\n        })\r\n\r\n        return _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.mergeUint16Array(pointsArrayList);\r\n    }\r\n\r\n    /**\r\n     * 返回Tile内所有的点，宽度为：128 x 64\r\n     * @returns {Uint16Array}\r\n     */\r\n    getTilePointsArray(pixelSize = 64){\r\n        if(pixelSize == 8) return this.getTilePointsArray8();\r\n        \r\n        let pointsArrayList = [];\r\n\r\n        this.blocks.forEach((block, id) => {\r\n            let bx = Math.floor(id % BLOCK_COL) * BLOCK_BIT;\r\n            let by = Math.floor(id / BLOCK_COL) * BLOCK_BIT;\r\n\r\n            let pointsArray = block.toPoints();\r\n            pointsArrayList.push(_utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.offsetPoints(pointsArray, bx, by));\r\n        })\r\n\r\n        return _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.mergeUint16Array(pointsArrayList);\r\n    }\r\n\r\n    /**\r\n     * 返回Tile内所有的点，宽度为：128 x 8 ( 8 个数据一个点)\r\n     * @returns {Uint16Array}\r\n     */\r\n    getTilePointsArray8(){\r\n        let pointsArrayList = [];\r\n\r\n        this.blocks.forEach((block, id) => {\r\n            let bx = Math.floor(id % BLOCK_COL) * BLOCK_BIT / 8;\r\n            let by = Math.floor(id / BLOCK_COL) * BLOCK_BIT / 8;\r\n\r\n            let pointsArray = block.toPoints8();\r\n            pointsArrayList.push(_utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.offsetPoints(pointsArray, bx, by));\r\n        })\r\n\r\n        return _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.mergeUint16Array(pointsArrayList);\r\n    }\r\n\r\n    /**\r\n     * 保持到DB中，异步\r\n     * @param {IDBDatabase} db \r\n     */\r\n    saveToDB(db){\r\n        const tx = db.transaction(\"files\", \"readwrite\");\r\n        const store = tx.objectStore(\"files\");\r\n\r\n        store.put({\"TileID\": this.id, \"data\": this.u8array});\r\n    }\r\n\r\n    savePosToDB(db){\r\n        const tx = db.transaction(\"points\", \"readwrite\");\r\n        const posArrStore = tx.objectStore(\"points\");\r\n\r\n        let posID64 = this.getBufferID(64);\r\n        let posID16 = this.getBufferID(16);\r\n        let posID4 = this.getBufferID(4);\r\n\r\n        let posArr64 = this.getTilePointsArray(64);\r\n        let posArr16 = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.subPoints(posArr64, 2);\r\n        let posArr4 = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.subPoints(posArr16, 2);\r\n\r\n        posArrStore.put({\"TileID\": posID64, \"data\": posArr64});\r\n        posArrStore.put({\"TileID\": posID16, \"data\": posArr16});\r\n        posArrStore.put({\"TileID\": posID4, \"data\": posArr4});\r\n    }\r\n\r\n    /**\r\n     * 读取block数据到coordsPoints中\r\n     * @param {Object.<String, Uint8Array>} coordsPoints \r\n     */\r\n    getBlockUint8Points(coordsPoints){ \r\n\r\n        this.blocks.forEach((block, id) => {\r\n            let offset = _utils_coords__WEBPACK_IMPORTED_MODULE_6__[\"default\"].fromID(id, TILE_BLOCK_ZOOM); // 在内部的位置\r\n            let coords = this.coords.at(BLOCK_ZOOM).addXYZ(offset.x, offset.y, BLOCK_ZOOM); // 实际位置\r\n\r\n            coordsPoints[coords.toString()] = block.toPoints256();\r\n        })\r\n    }\r\n\r\n    /** 生成Potrace格式 */\r\n    getPotraceData(){\r\n        let u8a = new Uint8Array(PIXELS*PIXELS);\r\n\r\n        for(let i=0; i<this.blocks.length; i++){\r\n            if(!this.blocks[i]) continue;\r\n\r\n            let ox = i % BLOCK_COL * _pixel64__WEBPACK_IMPORTED_MODULE_2__[\"default\"].pixelSize;\r\n            let oy = Math.floor(i / BLOCK_COL) * _pixel64__WEBPACK_IMPORTED_MODULE_2__[\"default\"].pixelSize;\r\n            this.blocks[i].blitPotraceData(u8a, ox, oy, PIXELS);\r\n        }\r\n\r\n        return u8a;\r\n    }\r\n\r\n    /**\r\n     * @return {ImageData} \r\n     */\r\n    getImageData(){\r\n        let a32a = new Uint32Array(this.getPotraceData());\r\n        return new ImageData(new Uint8ClampedArray(a32a.buffer), PIXELS, PIXELS);\r\n    }\r\n\r\n    /**\r\n     * 是否存在点\r\n     * @param {Coords} coords \r\n     */\r\n    at(coords){\r\n        let coordsBlock =  coords.divide(this.coords).at(TILE_BLOCK_ZOOM);\r\n    }\r\n}\n\n//# sourceURL=webpack://fog.vicc.wang/./www/js/data/tile128.js?");

/***/ }),

/***/ "./www/js/database/indexeddb.js":
/*!**************************************!*\
  !*** ./www/js/database/indexeddb.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DB)\n/* harmony export */ });\n/* harmony import */ var _utils_id__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/id */ \"./www/js/utils/id.js\");\n// database\r\n// @ts-check\r\n\r\n\r\n\r\nclass DB {\r\n    /** @type {IDBDatabase} */\r\n    static db;\r\n\r\n    /** @type {String} */\r\n    static KeyValues = \"keyvalues\";\r\n    \r\n    static CoordsPointsStore = \"coordsPoints\";\r\n    static CoordsPointsIndex = \"by_coords\";\r\n    static CoordsPointsKey = \"coords\"; \r\n\r\n    static initAndThen(callback){\r\n        const req = indexedDB.open(\"FOWDATABASE\", 1);\r\n\r\n        req.onupgradeneeded = function(event) {\r\n            const db = req.result;\r\n \r\n            const store = db.createObjectStore(\"files\", {keyPath: \"TileID\"});\r\n            const nameIndex = store.createIndex(\"by_TileID\", \"TileID\", {unique: true});\r\n\r\n            const posArrStore = db.createObjectStore(\"points\", {keyPath: \"TileID\"});\r\n            const posArrIndex = posArrStore.createIndex(\"by_TileID\", \"TileID\", {unique: true});\r\n\r\n            const keyStore = db.createObjectStore(DB.KeyValues, {keyPath: \"key\"});\r\n            const keyIndex = keyStore.createIndex(\"by_key\", \"key\", {unique: true});\r\n\r\n            const coordsStore = db.createObjectStore(DB.CoordsPointsStore, {keyPath: DB.CoordsPointsKey});\r\n            const coordsIndex = coordsStore.createIndex(DB.CoordsPointsIndex, DB.CoordsPointsKey, {unique: true});\r\n\r\n        };\r\n\r\n        req.onsuccess = function() {\r\n            DB.db = req.result;\r\n            callback()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * KEY获取VALUE值\r\n     * @param {String} key \r\n     * @param {Function} callback \r\n     */\r\n    static get(key, callback){\r\n        const tx = DB.db.transaction(DB.KeyValues, \"readonly\");\r\n        const store = tx.objectStore(DB.KeyValues);\r\n\r\n        const req = store.get(key);\r\n        req.onsuccess = event => {\r\n            // @ts-ignore\r\n            let ret = event.target.result;\r\n            if(ret) callback(ret.value);\r\n            else callback(null);\r\n        };\r\n    }\r\n\r\n    static set(key, value, callback){\r\n        const tx = DB.db.transaction(DB.KeyValues, \"readwrite\");\r\n        const store = tx.objectStore(DB.KeyValues);\r\n\r\n        store.put({\"key\": key, \"value\": value});\r\n        \r\n        tx.oncomplete = function(){\r\n            if(callback) callback();\r\n        }\r\n    }\r\n\r\n    static getBufferData(bufferID, callback){\r\n        const tx = DB.db.transaction(\"points\", \"readonly\");\r\n        const store = tx.objectStore(\"points\");\r\n    \r\n        const req = store.get(bufferID);\r\n        req.onsuccess = event => {\r\n            // @ts-ignore\r\n            let result = event.target.result;\r\n            if(result) {\r\n                callback(result[\"points\"]);\r\n            } else {\r\n                callback(null);\r\n            }\r\n        };\r\n    }\r\n\r\n    static getAllBufferData(callback){\r\n        const tx = DB.db.transaction(\"points\", \"readonly\");\r\n        const store = tx.objectStore(\"points\");\r\n    \r\n        const req = store.getAll();\r\n        req.onsuccess = event => {\r\n            // @ts-ignore\r\n            let result = event.target.result;\r\n            callback(result);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Object.<String, Uint16Array>} TileIDPointsList \r\n     * @param {Function} callback \r\n     */\r\n    static setBufferData(TileIDPointsList, callback){\r\n        const tx = DB.db.transaction(\"points\", \"readwrite\");\r\n        const store = tx.objectStore(\"points\");\r\n    \r\n        Object.entries(TileIDPointsList).forEach(TileIDPoints => {\r\n            const [tileID, points] = TileIDPoints;\r\n            store.put({\"TileID\": tileID, \"points\": points});\r\n        });\r\n        \r\n        tx.oncomplete = function(){\r\n            callback();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 保存 CoordsPoints 数据到Indexeddb中\r\n     * @param {Object.<String, Uint8Array>} CoordsPoints Coords坐标和对应的点\r\n     * @param {Function} callback \r\n     */\r\n    static saveCoordsPoints(CoordsPoints, callback){\r\n        const tx = DB.db.transaction(DB.CoordsPointsStore, \"readwrite\");\r\n        const store = tx.objectStore(DB.CoordsPointsStore);\r\n\r\n        Object.entries(CoordsPoints).forEach(coordsPoints => {\r\n            const [coords, points] = coordsPoints;\r\n            store.put({\"coords\": coords, \"points\": points});\r\n        });\r\n        \r\n        tx.oncomplete = function(){\r\n            callback();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取Coords的Points数据\r\n     * @param {String} coordsKey Coords坐标和对应的点\r\n     */\r\n    static getCoordsPoints(coordsKey, callback){\r\n        const tx = DB.db.transaction(DB.CoordsPointsStore, \"readonly\");\r\n        const store = tx.objectStore(DB.CoordsPointsStore);\r\n    \r\n        const req = store.get(coordsKey);\r\n        req.onsuccess = event => {\r\n            // @ts-ignore\r\n            let result = event.target.result;\r\n            if(result) {\r\n                callback(result);\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 获取Coords的Points数据\r\n     * @param {Function} callback 调用返回的结果\r\n     */\r\n    static getAllCoordsPointsKeys(callback){\r\n        const tx = DB.db.transaction(DB.CoordsPointsStore, \"readonly\");\r\n        const store = tx.objectStore(DB.CoordsPointsStore);\r\n\r\n        const index = store.index(DB.CoordsPointsIndex);\r\n        const req = index.getAllKeys();\r\n\r\n        req.onsuccess = event => {\r\n            // @ts-ignore\r\n            let result = event.target.result;\r\n            if(result) {\r\n                callback(result);\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 清理所有数据，慎重！\r\n     * @param {Function} callback \r\n     */\r\n    static clear(callback=null){\r\n        let stores = [DB.CoordsPointsStore, \"files\", \"points\", DB.KeyValues];\r\n        let count = stores.length;\r\n\r\n        for (let storeName of stores){\r\n            let tx = DB.db.transaction(storeName, \"readwrite\");\r\n            let store = tx.objectStore(storeName);\r\n            let req = store.clear();\r\n\r\n            req.onsuccess = () => {\r\n                count--;\r\n                if(count==0 && callback){\r\n                    callback();\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://fog.vicc.wang/./www/js/database/indexeddb.js?");

/***/ }),

/***/ "./www/js/eraser/eraser.js":
/*!*********************************!*\
  !*** ./www/js/eraser/eraser.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @geoman-io/leaflet-geoman-free */ \"leaflet\");\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(leaflet__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _LExtend_FogLayer8192__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../LExtend/FogLayer8192 */ \"./www/js/LExtend/FogLayer8192.js\");\n/* harmony import */ var _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../database/indexeddb */ \"./www/js/database/indexeddb.js\");\n/* harmony import */ var _fow_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../fow/utils */ \"./www/js/fow/utils.js\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/math */ \"./www/js/utils/math.js\");\n/* harmony import */ var _utils_file__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/file */ \"./www/js/utils/file.js\");\n/* harmony import */ var _utils_id__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/id */ \"./www/js/utils/id.js\");\n/* harmony import */ var _settings_config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../settings/config */ \"./www/js/settings/config.js\");\n/* harmony import */ var _data_tile128__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../data/tile128 */ \"./www/js/data/tile128.js\");\n/* harmony import */ var _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/arraybuffer */ \"./www/js/utils/arraybuffer.js\");\n/* harmony import */ var _utils_coords__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/coords */ \"./www/js/utils/coords.js\");\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! file-saver */ \"./node_modules/file-saver/dist/FileSaver.min.js\");\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! jszip */ \"jszip\");\n/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(jszip__WEBPACK_IMPORTED_MODULE_12__);\n/**\r\n * 橡皮擦V2.0版\r\n */\r\n\r\n// @ts-check\r\n\r\n\r\n\r\n// import '../LExtend/debugLayer';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\nconst i18nStrings = {\r\n    fileTitle: {\r\n        \"zh\": \"导入/导出\",\r\n        \"en\": \"File I/O\",\r\n    },\r\n    importFile: {\r\n        \"zh\": \"导入存档\",\r\n        \"en\": \"Import FoW File\",\r\n    },\r\n    importMSG: {\r\n        \"zh\": \"把zip格式存档拖到这里\",\r\n        \"en\": \"Drag the FOW zip achive here\"\r\n    },\r\n    openManually: {\r\n        \"zh\": \"手动打开\",\r\n        \"en\": \"Open Manually\"\r\n    },\r\n    outputAll: {\r\n        \"zh\": \"导出全部\",\r\n        \"en\": \"Save All\"       \r\n    },\r\n    dragEnd: {\r\n        \"zh\": \"可以松手啦！\",\r\n        \"en\": \"Now Release!\",\r\n    },\r\n    formatNotSupport: {\r\n        \"zh\": \"不支持的文件格式\",\r\n        \"en\": \"File Format Not Supported\",\r\n    },\r\n    outputEdit: {\r\n        \"zh\": \"导出本次修改\",\r\n        \"en\": \"Save Edited Files\"       \r\n    },\r\n    outputEditTips: {\r\n        \"zh\": \"注意：如果有0KB的存档，表示该地图块已经没有数据了，需要覆盖原存档后，再手动删除0KB存档\",\r\n        \"en\": \"Attention: IF there's any file that is zero bytes, remove them after copy & replace back to your archive.\",\r\n    },\r\n    clearAll: {\r\n        \"zh\": \"清理存档\",\r\n        \"en\": \"Clear All Data\",\r\n    },\r\n    showModeTitle: {\r\n        \"zh\": \"显示模式\",\r\n        \"en\": \"Display\",\r\n    },\r\n    fogMode: {\r\n        \"zh\": \"迷雾模式\",\r\n        \"en\": \"FOG\",\r\n    },\r\n    lineMode: {\r\n        \"zh\": \"实线模式\",\r\n        \"en\": \"SOLID\",\r\n    },\r\n    lineWidth: {\r\n        \"zh\": \"粗细\",\r\n        \"en\": \"Size\",\r\n    },\r\n    color: {\r\n        \"zh\": \"颜色\",\r\n        \"en\": \"Color\",\r\n    },\r\n    alpha: {\r\n        \"zh\": \"透明度\",\r\n        \"en\": \"Alpha\",\r\n    },\r\n    map: {\r\n        \"zh\": \"地图\",\r\n        \"en\": \"Map\",\r\n    },\r\n    saturate: {\r\n        \"zh\": \"饱和度\",\r\n        \"en\": \"Saturate\",\r\n    },\r\n    invert: {\r\n        \"zh\": \"颜色反转\",\r\n        \"en\": \"Invert\",\r\n    },\r\n    eraserTitle: {\r\n        \"zh\": \"擦除工具\",\r\n        \"en\": \"Erasers\",\r\n    },\r\n    eraser: {\r\n        \"zh\": \"橡皮擦\",\r\n        \"en\": \"Eraser\",\r\n    },\r\n    AIEraser: {\r\n        \"zh\": \"智能擦除\",\r\n        \"en\": \"AI Eraser\",\r\n    },\r\n    revertEraser: {\r\n        \"zh\": \"撤销\",\r\n        \"en\": \"Revert\",\r\n    },\r\n    Escape: {\r\n        \"zh\": \"退出\",\r\n        \"en\": \"Escape\",\r\n    },\r\n    drawTitle: {\r\n        \"zh\": \"绘制工具\",\r\n        \"en\": \"Drawing\",\r\n    },\r\n    drawLine: {\r\n        \"zh\": \"画线段\",\r\n        \"en\": \"Draw A Line\",\r\n    },\r\n    editLine: {\r\n        \"zh\": \"修改线段\",\r\n        \"en\": \"Edit Lines\",\r\n    },\r\n    deleteLine: {\r\n        \"zh\": \"删除线段\",\r\n        \"en\": \"Delete Lines\",\r\n    },\r\n    drawFinish: {\r\n        \"zh\": \"保存线段\",\r\n        \"en\": \"Save Lines\",\r\n    },\r\n    readingFile: {\r\n        \"zh\": \"数据解读中：\",\r\n        \"en\": \"Reading Files: \",\r\n    },\r\n    saveToDB: {\r\n        \"zh\": \"保存中...\",\r\n        \"en\": \"Saving... \",\r\n    },\r\n    confirmDelete: {\r\n        \"zh\": \"确定清理目前的存档?\",\r\n        \"en\": \"Are you sure to CLEAR all data?\",\r\n    },\r\n    handling: {\r\n        \"zh\": \"处理中...\",\r\n        \"en\": \"Processing...\",\r\n    },\r\n    noEdits: {\r\n        \"zh\": \"无改动\",\r\n        \"en\": \"No Edits\",\r\n    },\r\n    title: {\r\n        \"zh\": \"迷雾橡皮擦\",\r\n        \"en\": \"FOW ERASER\",\r\n    },\r\n}\r\n\r\nlet lang = 'zh';\r\n\r\nfunction initI18n(){\r\n    let language = navigator.languages ? navigator.languages[0] : navigator.language;\r\n    lang = language.slice(0, 2);\r\n    if(lang == 'zh') return;\r\n    else {\r\n        lang = 'en'\r\n    }\r\n\r\n    let elems = document.querySelectorAll(`[i18n]`);\r\n    console.log(lang);\r\n    elems.forEach(elem => {\r\n        let key = elem.attributes[\"i18n\"].value;\r\n        if(i18nStrings[key]){\r\n            elem.textContent = i18nStrings[key][lang];\r\n        }\r\n    })\r\n\r\n    document.title = i18nStrings['title'][lang];\r\n    Q(\"#outputEdit\").title = i18nStrings['outputEditTips'][lang];\r\n}\r\n\r\nlet setting = JSON.parse(localStorage.getItem(\"fog_eraser_setting\")) || {\r\n    \"fog\": {\r\n        \"color\": 0,\r\n        \"alpha\": 0.8,\r\n    }, \r\n    \"line\": {\r\n        \"color\": 0, // 0 ~ 1, red - green - blue - red\r\n        \"alpha\": 0.8,\r\n    },\r\n    lineWidth: 1,\r\n    mode: \"fog\",\r\n    map: {\r\n        latlng: [23.7, 121.2],\r\n        zoom: 8,\r\n    },\r\n    dataExist: false,\r\n}\r\n\r\nlet map = leaflet__WEBPACK_IMPORTED_MODULE_0__.map('map', {\r\n    attributionControl: false, \r\n    // 不显示版本信息\r\n    zoomControl: false, // 不显示+-号控制\r\n    zoomSnap: 0.1, // 缩放比例\r\n    // preferCanvas: true, // 使用canvas来绘制\r\n    maxBounds: leaflet__WEBPACK_IMPORTED_MODULE_0__.latLngBounds([85, 360], [-85, -360]), // 限制为南北纬各87度\r\n\r\n    minZoom: 2.5,\r\n    maxBoundsViscosity: 1.0,\r\n    // maxZoom: 16,\r\n    // fadeAnimation: false\r\n})\r\n\r\n// @ts-ignore\r\nwindow.map = map;\r\n\r\n\r\n/** @type {FogLayer8192} */\r\nlet FogLayer;\r\n\r\n// @ts-ignore\r\nwindow.FogLayer = FogLayer;\r\n\r\n// L.PM.setOptIn(true);\r\nlet controlLayers\r\n\r\nconst EditedTileIDs = \"EditTileIDs\"; // key\r\n\r\nfunction loadingMap(){\r\n    map.setView(setting.map.latlng, setting.map.zoom);\r\n\r\n    // const debugLayer = L.gridLayer.debugLayer({\r\n    //     minNativeZoom: 0, \r\n    //     maxNativeZoom: 9\r\n    // });\r\n    \r\n    FogLayer = new _LExtend_FogLayer8192__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\r\n        minNativeZoom: 0, \r\n        maxNativeZoom: 16,\r\n    })\r\n\r\n    controlLayers = leaflet__WEBPACK_IMPORTED_MODULE_0__.control.layers(_settings_config__WEBPACK_IMPORTED_MODULE_7__.Config.baseMaps, \r\n        {\r\n            \"迷雾\": FogLayer,\r\n        }, \r\n        {position: 'topright'});\r\n\r\n    _settings_config__WEBPACK_IMPORTED_MODULE_7__.Config.baseMaps[\"Google\"].addTo(map);\r\n\r\n    map.addLayer(FogLayer);\r\n    // map.addLayer(debugLayer);\r\n    map.addControl(controlLayers);\r\n\r\n    initI18n();\r\n    initMenu();\r\n    initFileINOUT();\r\n    initDisplayMode();\r\n    initEraser();\r\n    /*initShortKey();*/\r\n    initDrawing();\r\n}\r\n\r\nconst Q = (e) => document.querySelector(e);\r\n\r\nfunction initMenu(){\r\n\r\n    function hideAll(){\r\n        Q('#showMode').classList.remove('active');\r\n        Q('#eraser').classList.remove('active');\r\n        Q('#draw').classList.remove('active');\r\n        Q('#file').classList.remove('active');\r\n        updateEraserStatus(false);\r\n    }\r\n\r\n    Q('#showModeTitle').addEventListener('click', function(){\r\n        hideAll();\r\n        Q('#showMode').classList.add('active');\r\n        updateEraserStatus(false);\r\n    })\r\n\r\n    Q('#eraserTitle').addEventListener('click', function(){\r\n        hideAll();\r\n        Q('#eraser').classList.add('active');\r\n    })\r\n\r\n    Q('#drawTitle').addEventListener('click', function(){\r\n        hideAll();\r\n        Q('#draw').classList.add('active');\r\n    })\r\n\r\n    Q('#fileTitle').addEventListener('click', function(){\r\n        hideAll();\r\n        Q('#file').classList.add('active');\r\n    })\r\n\r\n    // @ts-ignore\r\n    document.querySelectorAll(\"#ESC\").forEach(div => div.onclick = cancelAllStatus);\r\n    \r\n\r\n}\r\n\r\n/** 初始化文件读写模块 */\r\nfunction initFileINOUT(){\r\n    const preventDefault = (e) => e.preventDefault();\r\n    document.addEventListener(\"dragleave\", preventDefault);\r\n    document.addEventListener(\"dragover\", preventDefault);\r\n    document.addEventListener(\"dragenter\", preventDefault);\r\n\r\n    Q('#importMSG')._defaultTxt = Q('#importMSG').textContent;\r\n\r\n    Q('#importFile').addEventListener(\"dragover\",function(e){\r\n        let files = e.dataTransfer.items;\r\n\r\n        if(files.length == 1 && _utils_file__WEBPACK_IMPORTED_MODULE_5__.isZipFile(files[0])){\r\n            Q('#importFile').classList.add(\"active\");\r\n            Q('#importMSG').textContent = i18nStrings['dragEnd'][lang];\r\n        } else {\r\n            Q('#importFile').classList.add(\"error\");\r\n            Q('#importMSG').textContent = i18nStrings['formatNotSupport'][lang];\r\n        }\r\n    })\r\n\r\n    Q('#importFile').addEventListener(\"dragleave\",function(e){\r\n        Q('#importFile').classList = [];\r\n        Q('#importMSG').textContent = Q('#importMSG')._defaultTxt;\r\n    })\r\n\r\n    Q('#importFile').addEventListener(\"drop\",function(e){\r\n        Q('#importFile').classList = [];\r\n        e.preventDefault();\r\n\r\n        let files = e.dataTransfer.files;\r\n\r\n        if(files.length == 1 && _utils_file__WEBPACK_IMPORTED_MODULE_5__.isZipFile(files[0])){\r\n            parseFile(files[0])\r\n        }\r\n    });\r\n\r\n    Q(\"#inputFile\").addEventListener(\"change\", function(e){\r\n        let files = e.target.files;\r\n        if(files.length == 1 && _utils_file__WEBPACK_IMPORTED_MODULE_5__.isZipFile(files[0])){\r\n            parseFile(files[0])\r\n        }\r\n    }, false);\r\n\r\n    // 模拟点击\r\n    Q(\"#importFile\").onclick = (e) => Q(\"#inputFile\").click();\r\n\r\n\r\n    Q(\"#clearAll\").onclick = function() {\r\n        if (window.confirm(i18nStrings[\"confirmDelete\"][lang])) {\r\n            _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].clear(() => FogLayer.reloadAllFromDB());\r\n            _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].set(EditedTileIDs, null);\r\n            updateFileStatu(false);\r\n        }\r\n    }\r\n\r\n    updateFileStatu(setting.dataExist);\r\n\r\n    // 导出\r\n    Q(\"#outputAll\").onclick = function() {  \r\n        Q('#saveProcess').textContent = i18nStrings['handling'][lang];\r\n\r\n        _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getAllBufferData(function(result){\r\n\r\n            let zip = new (jszip__WEBPACK_IMPORTED_MODULE_12___default())();\r\n\r\n            result.forEach(tileIDPoints => {\r\n\r\n                let TileID = tileIDPoints.TileID;\r\n                if(TileID.slice(0,5) == \"TILE1\" || TileID.slice(0,5) == \"TILE8\") return;\r\n                \r\n                if(tileIDPoints.points.length == 0) return;\r\n\r\n                let tileID = _utils_id__WEBPACK_IMPORTED_MODULE_6__.tileID2Number(TileID);\r\n                let tile128 = new _data_tile128__WEBPACK_IMPORTED_MODULE_8__[\"default\"](tileID);\r\n                tile128.fromPoints(tileIDPoints.points);\r\n\r\n                let filename = _fow_utils__WEBPACK_IMPORTED_MODULE_3__.getFilenameByTileId(tileID);\r\n                zip.file(\"Sync/\"+filename, tile128.toUint8Array(), {binary: true});\r\n            })\r\n\r\n            Q('#saveProcess').textContent = \"\";\r\n\r\n            zip.generateAsync({type:\"blob\"}).then(function(blob) {\r\n                let t = new Date();\r\n                let filename = `Sync_${t.toLocaleDateString()}.zip`;\r\n                file_saver__WEBPACK_IMPORTED_MODULE_11___default().saveAs(blob, filename);\r\n            });\r\n\r\n        })\r\n    }\r\n\r\n    // 导出部分修改\r\n    Q(\"#outputEdit\").onclick = function() {  \r\n        Q('#saveProcess').textContent = i18nStrings[\"handling\"][lang];\r\n\r\n        _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(EditedTileIDs, (editedTileID) => {\r\n            \r\n            if(editedTileID == null) {\r\n                Q('#saveProcess').textContent = i18nStrings[\"noEdits\"][lang];\r\n                setTimeout(function(){\r\n                    Q('#saveProcess').textContent = \"\";\r\n                }, 5000)\r\n                return;\r\n            }\r\n\r\n            let total = editedTileID.size;\r\n\r\n            let zip = new (jszip__WEBPACK_IMPORTED_MODULE_12___default())();\r\n\r\n            /** @type {Set} */\r\n            editedTileID.forEach(tileID => {\r\n\r\n                let TileID = _utils_id__WEBPACK_IMPORTED_MODULE_6__.tileID(64, tileID%512, Math.floor(tileID/512), 9)\r\n\r\n                _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getBufferData(TileID, function(points){\r\n                    total -= 1;\r\n                    let filename = _fow_utils__WEBPACK_IMPORTED_MODULE_3__.getFilenameByTileId(tileID);\r\n\r\n                    if(points.length==0){\r\n                        zip.file(\"Sync/\"+filename, new Uint8Array(0), {binary: true});\r\n                    } else {\r\n                        let tile128 = new _data_tile128__WEBPACK_IMPORTED_MODULE_8__[\"default\"](tileID);\r\n                        tile128.fromPoints(points);\r\n                        zip.file(\"Sync/\"+filename, tile128.toUint8Array(), {binary: true});\r\n                    }\r\n\r\n                    if(total == 0){\r\n                        Q('#saveProcess').textContent = \"\";\r\n\r\n                        zip.generateAsync({type:\"blob\"}).then(function(blob) {\r\n                            let t = new Date();\r\n                            let filename = `Sync_Edited_${t.toLocaleDateString()}.zip`;\r\n                            file_saver__WEBPACK_IMPORTED_MODULE_11___default().saveAs(blob, filename);\r\n                        });\r\n\r\n                        _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].set(EditedTileIDs, null);\r\n                    }\r\n                })\r\n            })\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * 更新存档存在状态\r\n * @param {Boolean} status \r\n */\r\nfunction updateFileStatu(status){\r\n    setting.dataExist = status;\r\n    // 没有数据\r\n    if(!setting.dataExist){ \r\n        Q(\"#importFile\").hidden = false;\r\n        Q('#importMSG').textContent = Q('#importMSG')._defaultTxt;\r\n\r\n        Q(\"#clearAll\").style.display = 'none';\r\n        Q(\"#outputAll\").style.display = 'none';\r\n        Q(\"#outputEdit\").style.display = 'none';\r\n    } else {\r\n        Q(\"#importFile\").hidden = true;\r\n\r\n        Q(\"#clearAll\").style.display = '';\r\n        Q(\"#outputAll\").style.display = '';\r\n        Q(\"#outputEdit\").style.display = '';\r\n    }\r\n    localStorage.setItem(\"fog_eraser_setting\", JSON.stringify(setting));\r\n}\r\n\r\n\r\n\r\n/**\r\n * 初始化显示模式\r\n */\r\nfunction initDisplayMode(){\r\n\r\n    /** @type {HTMLInputElement} */\r\n    const fogModeSelector = document.querySelector('#fogMode');\r\n    /** @type {HTMLInputElement} */\r\n    const lineModeSelector = document.querySelector('#lineMode');\r\n\r\n    fogModeSelector.checked = setting.mode == \"fog\";\r\n    lineModeSelector.checked = setting.mode == \"line\";\r\n\r\n    /** @type {HTMLInputElement} */\r\n    const lineWidthSlider = document.querySelector('#lineWidthSlider');\r\n    /** @type {HTMLInputElement} */\r\n    const colorSlider = document.querySelector('#colorSlider');\r\n    /** @type {HTMLInputElement} */\r\n    const alphaSlider = document.querySelector('#alphaSlider');\r\n\r\n    lineWidthSlider.value = String(setting.lineWidth);\r\n    alphaSlider.value = String(setting[setting.mode][\"alpha\"]);\r\n    colorSlider.value = String(setting[setting.mode][\"color\"]);\r\n\r\n    function changeMode(event){\r\n        setting.mode = event.target.value;\r\n\r\n        alphaSlider.value = String(setting[setting.mode][\"alpha\"]);\r\n        colorSlider.value = String(setting[setting.mode][\"color\"]);\r\n\r\n        FogLayer.renderMode = setting.mode;\r\n        redraw();\r\n    }\r\n\r\n    function redraw(){\r\n        if(setting.mode == \"fog\"){\r\n            let c = setting['fog'][\"color\"];\r\n            FogLayer.webGL.setFogColor(c, c, c, setting['fog'][\"alpha\"]);\r\n        } else {\r\n            let [r, g, b] = _utils_math__WEBPACK_IMPORTED_MODULE_4__.hslToRgb(setting['line'][\"color\"], 0.5, 0.5);\r\n            FogLayer.webGL.setColor(r, g, b, setting['line'][\"alpha\"]);\r\n        }\r\n        FogLayer.lineWidth = setting.lineWidth;\r\n        FogLayer.redraw();\r\n\r\n        setting.map.latlng = FogLayer.centerLatLng;\r\n        setting.map.zoom = FogLayer.zoom;\r\n        localStorage.setItem(\"fog_eraser_setting\", JSON.stringify(setting));\r\n    }\r\n\r\n    fogModeSelector.addEventListener('change', changeMode);\r\n    lineModeSelector.addEventListener('change', changeMode);\r\n\r\n    lineWidthSlider.addEventListener('input', function(e){\r\n        // @ts-ignore\r\n        setting.lineWidth = Number( lineWidthSlider.value );\r\n        redraw();\r\n    })\r\n\r\n    colorSlider.addEventListener('input', function(e){\r\n        setting[setting.mode][\"color\"] = Number(colorSlider.value);\r\n        redraw();\r\n    })\r\n\r\n    alphaSlider.addEventListener('input', function(e){\r\n        setting[setting.mode][\"alpha\"] = Number( alphaSlider.value );\r\n        redraw();\r\n    })\r\n\r\n    let hueRotate=0, saturate=1, invert=0;\r\n    Q(\"#mapColorSlider\").oninput = (e) => {\r\n        hueRotate = Number( Q(\"#mapColorSlider\").value );\r\n        Q(\".leaflet-layer\").style.filter = `hue-rotate(${hueRotate}deg) saturate(${saturate}) invert(${invert})`\r\n    }\r\n\r\n    Q(\"#saturateSlider\").oninput = (e) => {\r\n        saturate = Number( Q(\"#saturateSlider\").value );\r\n        Q(\".leaflet-layer\").style.filter = `hue-rotate(${hueRotate}deg) saturate(${saturate}) invert(${invert})`\r\n    }\r\n\r\n    Q(\"#invert\").onchange = (e) => {\r\n\r\n        invert = Q(\"#invert\").checked ? 1 : 0;\r\n        Q(\".leaflet-layer\").style.filter = `hue-rotate(${hueRotate}deg) saturate(${saturate}) invert(${invert})`\r\n    }\r\n\r\n    FogLayer.renderMode = setting.mode;\r\n    redraw();\r\n}\r\n\r\nfunction clickErasor(e){\r\n    // @ts-ignore\r\n    let point22 = map.project(e.latlng, 14); // 实际为 14 + 8\r\n    let coords = new _utils_coords__WEBPACK_IMPORTED_MODULE_10__[\"default\"](point22.x, point22.y, 22); // 256\r\n\r\n    let coordsTile = coords.at(9).floor();\r\n    let coordsPoints = coords.divide(coordsTile).at(13);\r\n    \r\n    let z = map.getZoom();\r\n    let size = (eraserSize/2) * Math.pow(2, 14-z);\r\n\r\n    let tileSize = 8192;\r\n\r\n    let minX = (coordsPoints.x - size)/tileSize;\r\n    let maxX = (coordsPoints.x + size)/tileSize;\r\n    let minY = (coordsPoints.y - size)/tileSize;\r\n    let maxY = (coordsPoints.y + size)/tileSize;\r\n\r\n    for(let tx=Math.floor(minX); tx<maxX; tx++){\r\n        for(let ty=Math.floor(minY); ty<maxY; ty++){\r\n            let coordsT = coordsTile.clone().addXYZ(tx, ty, coordsTile.z);\r\n            let coordsP = {x: coordsPoints.x - tx*tileSize, y: coordsPoints.y - ty*tileSize}\r\n            deleteTile(coordsT, coordsP, size);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {Coords} coordsTile \r\n * @param {Object} centerPoint 中间的点 {x, y}\r\n * @param {Number} size \r\n */\r\nfunction deleteTile(coordsTile, centerPoint, size){\r\n    let savedata = {};\r\n\r\n    let TileID = _utils_id__WEBPACK_IMPORTED_MODULE_6__.tileID(64, coordsTile.x, coordsTile.y, coordsTile.z);\r\n    let TileID8 = _utils_id__WEBPACK_IMPORTED_MODULE_6__.tileID(8, coordsTile.x, coordsTile.y, coordsTile.z);\r\n    let TileID1 = _utils_id__WEBPACK_IMPORTED_MODULE_6__.tileID(1, coordsTile.x, coordsTile.y, coordsTile.z);\r\n\r\n    _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getBufferData(TileID, function(pointsArray){\r\n        if(pointsArray == null) return;\r\n\r\n        let points;\r\n\r\n        if(eraserMode==1){\r\n            points = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_9__.removePoints(pointsArray, centerPoint, size);\r\n        } else if (eraserMode==2){\r\n            points = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_9__.removePointsAuto(pointsArray, centerPoint, size);\r\n        } else {\r\n            return;\r\n        }\r\n        // let points = ArrayBufferUtil.removePoints(pointsArray, centerPoint, size);\r\n        // let points2 = ArrayBufferUtil.removePointsAuto(pointsArray, centerPoint, size);\r\n\r\n        // console.log(points, points2);\r\n        // removePointsAuto\r\n        let reminedPoints = points.reminedPoints;\r\n        let deletedPoints = points.deletedPoints;\r\n\r\n        if(deletedPoints.length == 0) return;\r\n\r\n        savedata[TileID] = reminedPoints;\r\n        savedata[TileID8] = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_9__.subPoints(reminedPoints, 3);\r\n        savedata[TileID1] = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_9__.subPoints(reminedPoints, 3);\r\n\r\n        // reset buff\r\n        FogLayer.webGL.setBufferInfo(TileID, reminedPoints);\r\n        FogLayer.webGL.setBufferInfo(TileID8, savedata[TileID8]);\r\n        FogLayer.webGL.setBufferInfo(TileID8, savedata[TileID1]);\r\n\r\n        FogLayer.redraw();\r\n\r\n        RevertList.push({TileID, deletedPoints});\r\n        if(RevertList.length > 100) RevertList.shift(); // 保留100次\r\n\r\n        _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].setBufferData(savedata, ()=>{});\r\n        addTileIDtoEditList(_utils_id__WEBPACK_IMPORTED_MODULE_6__.tileID2Number(TileID));\r\n    })\r\n};\r\n\r\nconst RevertList = [];\r\n// 撤销一次擦除\r\nfunction revertEraser(){\r\n    if(RevertList.length == 0) return;\r\n    let item = RevertList.pop();\r\n    let TileID = item.TileID;\r\n    let TileID8 = TileID.replace('64', '8');\r\n    let TileID1 = TileID.replace('64', '1');\r\n\r\n    let deletedPoints = item.deletedPoints;\r\n\r\n    _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getBufferData(TileID, function(pointsArray){\r\n        let data = {};\r\n\r\n        data[TileID] = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_9__.mergeUint16Array([pointsArray, deletedPoints]);\r\n        data[TileID8] = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_9__.subPoints(data[TileID], 3);\r\n        data[TileID1] = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_9__.subPoints(data[TileID8], 3);\r\n\r\n        FogLayer.webGL.setBufferInfo(TileID, data[TileID]);\r\n        FogLayer.webGL.setBufferInfo(TileID8, data[TileID8]);\r\n        FogLayer.webGL.setBufferInfo(TileID1, data[TileID1]);\r\n        FogLayer.redraw();\r\n\r\n        _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].setBufferData(data, ()=>{}); \r\n        addTileIDtoEditList(_utils_id__WEBPACK_IMPORTED_MODULE_6__.tileID2Number(TileID));\r\n    })\r\n}\r\n\r\nfunction addTileIDtoEditList(TileID){\r\n    _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(EditedTileIDs, (editedTileIDs) => {\r\n        if(editedTileIDs == null) editedTileIDs = new Set();\r\n        editedTileIDs.add(TileID);\r\n        _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].set(EditedTileIDs, editedTileIDs);\r\n    })\r\n}\r\n\r\n\r\nlet eraserSize = 40;\r\nlet eraserMode = 0; // 0 - none, 1 - 普通， 2- AI\r\nfunction initEraser(){\r\n    Q(\"#circularcursor\").style.display = 'none';\r\n\r\n    document.onmousemove = function(e) {\r\n        // console.log(e);\r\n        Q('#circularcursor').style.left = e.clientX + \"px\";\r\n        Q('#circularcursor').style.top = e.clientY + \"px\";\r\n    };\r\n\r\n    Q('#circleEraser').oninput = function(){\r\n        eraserSize = Q('#circleEraser').value;\r\n        Q('#circularcursor').style.width = eraserSize + \"px\";\r\n        Q('#circularcursor').style.height = eraserSize + \"px\";\r\n    }\r\n\r\n    Q('#revertEraser').onclick = revertEraser;\r\n\r\n    Q(\"#eraserDiv\").onclick = e =>{\r\n        Q(\"#eraserTitle\").click(); // 自动切换到目录下\r\n        updateEraserStatus(1); //\r\n    }\r\n    Q(\"#AIEraser\").onclick = e =>{\r\n        Q(\"#eraserTitle\").click(); // 自动切换到目录下\r\n        updateEraserStatus(2);  \r\n    }\r\n}\r\n\r\n// leaflet-layer \r\nfunction updateEraserStatus(status){\r\n    eraserMode = status; // // 0 - none, 1 - 普通， 2- AI\r\n    if(eraserMode > 0){\r\n        // 显示橡皮擦\r\n        Q(\"#circularcursor\").style.display = '';\r\n        Q('#circleEraser').value = eraserSize;\r\n        Q('#circularcursor').style.width = eraserSize + \"px\";\r\n        Q('#circularcursor').style.height = eraserSize + \"px\";\r\n\r\n        map.on('click', clickErasor);\r\n        map.on('dragstart', (e) => {\r\n            Q(\"#circularcursor\").style.display = 'none';\r\n        })\r\n    \r\n        map.on('dragend', (e) => {\r\n            if(eraserMode){\r\n                Q(\"#circularcursor\").style.display = '';\r\n            }\r\n        });\r\n\r\n    } else {\r\n        Q(\"#circularcursor\").style.display = 'none';\r\n\r\n        map.off('click');\r\n        map.off('dragstart');\r\n        map.off('dragend');\r\n    }\r\n\r\n    Q(\"#eraserDiv\").classList.remove('active');\r\n    Q(\"#AIEraser\").classList.remove('active');\r\n\r\n    if(eraserMode==1){\r\n        Q(\"#eraserDiv\").classList.add('active');\r\n        Q('#circularcursor').style[\"background-color\"] = \"#f00\";\r\n    } else if (eraserMode==2){\r\n        Q(\"#AIEraser\").classList.add('active');\r\n        Q('#circularcursor').style[\"background-color\"] = \"#0f0\";\r\n    }\r\n}\r\n\r\n\r\nfunction initShortKey(){\r\n    document.onkeydown = e => {\r\n        e.preventDefault();\r\n        // ctrlKey, altKey, shiftKey\r\n        let key = e.key.toUpperCase();\r\n        let ctrl = e.ctrlKey || e.metaKey;\r\n        let shift = e.shiftKey;\r\n\r\n        if(key == 'F1') Q(\"#fileTitle\").click();\r\n        else if(key == 'F2') Q(\"#showModeTitle\").click();\r\n        else if(key == 'F3') Q(\"#eraserTitle\").click();\r\n        else if(key == 'F4') Q(\"#drawTitle\").click();\r\n\r\n        else if(key == 'F11'){\r\n            let display = Q(\"#menu\").style.display;\r\n            Q(\"#menu\").style.display = display==\"none\" ? \"\" : \"none\";\r\n            \r\n            if(display == \"\"){\r\n                map.removeControl(controlLayers);\r\n            } else {\r\n                map.addControl(controlLayers);\r\n            }\r\n        } \r\n\r\n        else if(key == 'O' && ctrl) Q('#importFile').click();\r\n        else if(key == 'Q' && ctrl) Q('#clearAll').click();\r\n\r\n        else if(key == 'F') Q('#fogMode').click();\r\n        else if(key == 'G') Q('#lineMode').click();\r\n        else if(key == 'E') Q(\"#eraserDiv\").click();\r\n        else if(key == 'R') {\r\n            \r\n            Q(\"#AIEraser\").click();\r\n        }\r\n\r\n        else if(key == 'Z' && ctrl) Q('#revertEraser').onclick();\r\n        else if(key == 'C') Q(\"#drawLine\").onclick();\r\n        else if(key == 'X') Q(\"#editLine\").onclick();\r\n        else if(key == 'D') Q(\"#deleteLine\").onclick();\r\n        else if(key == 'S' && !ctrl && !shift) Q(\"#drawFinish\").onclick();\r\n        else if(key == 'S' && ctrl && !shift) Q(\"#outputAll\").onclick();\r\n        else if(key == 'S' && ctrl && shift) Q(\"#outputEdit\").onclick();\r\n\r\n        else if(key == 'ESCAPE') cancelAllStatus();\r\n\r\n        // console.log(key);\r\n    }\r\n}\r\n\r\n/** 取消所有事件 */\r\nfunction cancelAllStatus(){\r\n    setAsActive(null);\r\n    map.pm.disableDraw();\r\n    updateEraserStatus(0);\r\n}\r\n\r\nfunction setAsActive(div){\r\n    document.querySelectorAll('.horizontal.active').forEach(e => e.classList.remove('active'));\r\n    if(div) div.classList.add('active');\r\n}\r\n\r\nfunction initDrawing(){\r\n    // map.pm.addControls({  \r\n    //     position: 'topleft',  \r\n    //     drawCircle: false,  \r\n    //   });  \r\n    map.pm.setLang('zh');\r\n    // map.pm.setPathOptions({\r\n    //     color: 'red',\r\n    //     weight: 2,\r\n    // });\r\n\r\n    Q(\"#drawLine\").onclick = function(){\r\n        Q(\"#drawTitle\").click();\r\n        setAsActive(this);\r\n        map.pm.enableDraw('Line');\r\n    }\r\n\r\n    Q(\"#editLine\").onclick = function(){\r\n        Q(\"#drawTitle\").click();\r\n        setAsActive(this);\r\n        map.pm.toggleGlobalEditMode();\r\n    }\r\n\r\n    Q(\"#deleteLine\").onclick = function(){\r\n        Q(\"#drawTitle\").click();\r\n        setAsActive(this);\r\n        map.pm.toggleGlobalRemovalMode();\r\n    }\r\n\r\n    Q(\"#drawFinish\").onclick = function(){\r\n        Q(\"#drawTitle\").click();\r\n        setAsActive(this);\r\n\r\n        let layerGroup = map.pm.getGeomanDrawLayers(true);\r\n\r\n        /** @type { import(\"geojson\").FeatureCollection } */\r\n        // @ts-ignore\r\n        let FeatureCollection = layerGroup.toGeoJSON();\r\n\r\n        // @ts-ignore\r\n        layerGroup.pm.getLayers().forEach(layer => {\r\n            layer.remove();\r\n        });\r\n\r\n        saveFeatureCollection(FeatureCollection);\r\n    }\r\n    \r\n}\r\n\r\n/** 保存FeatureCollection到FOW数据库\r\n * @param { import(\"geojson\").FeatureCollection } FeatureCollection\r\n */\r\nfunction saveFeatureCollection(FeatureCollection){\r\n    let pointsArray = [];\r\n\r\n    FeatureCollection.features.forEach(feature => {\r\n        if(feature.geometry.type != 'LineString') return;\r\n\r\n        let coordsArray = feature.geometry.coordinates;\r\n\r\n        for (let i=0; i<coordsArray.length-1; i++){\r\n            let coordsStart = coordsArray[i];\r\n            let coordsEnd = coordsArray[i+1];\r\n\r\n            let pointStart = map.project(leaflet__WEBPACK_IMPORTED_MODULE_0__.latLng(coordsStart[1], coordsStart[0]), 14);\r\n            let pointEnd = map.project(leaflet__WEBPACK_IMPORTED_MODULE_0__.latLng(coordsEnd[1], coordsEnd[0]), 14);\r\n\r\n            let sx = pointStart.x;\r\n            let sy = pointStart.y;\r\n            let ex = pointEnd.x;\r\n            let ey = pointEnd.y;\r\n\r\n            let dx = ex - sx;\r\n            let dy = ey - sy;\r\n\r\n            let d = Math.sqrt(dx*dx + dy*dy);\r\n\r\n            let ddx = dx / d;\r\n            let ddy = dy / d;\r\n\r\n            for(let i=0; i<d; i++){\r\n                pointsArray.push(Math.round(sx + ddx*i));\r\n                pointsArray.push(Math.round(sy + ddy*i));\r\n            }\r\n        }\r\n\r\n        let TileMap = {};\r\n        let size = 8192; // 13\r\n\r\n        for(let i=0; i<pointsArray.length; i+=2){\r\n            let x = pointsArray[i];\r\n            let y = pointsArray[i+1];\r\n            let TileID = _utils_id__WEBPACK_IMPORTED_MODULE_6__.tileID(64, x>>13, y>>13, 9);\r\n            if(!TileMap[TileID]) TileMap[TileID] = [];\r\n            TileMap[TileID].push(x%size, y%size);\r\n        }\r\n\r\n        Object.keys(TileMap).forEach(TileID => {\r\n            let points = new Uint16Array(TileMap[TileID]);\r\n\r\n            let savedata = {};\r\n            let TileID8 = TileID.replace('64', '8');\r\n            let TileID1 = TileID.replace('64', '1');\r\n\r\n            _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getBufferData(TileID, function(pointsArray){\r\n                if(pointsArray == null){\r\n                    pointsArray = points;\r\n                    FogLayer.tileIDs.push(_utils_id__WEBPACK_IMPORTED_MODULE_6__.tileID2Number(TileID));\r\n                    _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].set('TileIDS', FogLayer.tileIDs);\r\n                } else {\r\n                    pointsArray = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_9__.mergeUint16Array([pointsArray, points])\r\n                }\r\n\r\n                savedata[TileID] = pointsArray;\r\n                savedata[TileID8] = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_9__.subPoints(pointsArray, 3);\r\n                savedata[TileID1] = _utils_arraybuffer__WEBPACK_IMPORTED_MODULE_9__.subPoints(pointsArray, 3);\r\n        \r\n                // reset buff\r\n                FogLayer.webGL.setBufferInfo(TileID, pointsArray);\r\n                FogLayer.webGL.setBufferInfo(TileID8, savedata[TileID8]);\r\n                FogLayer.webGL.setBufferInfo(TileID8, savedata[TileID1]);\r\n        \r\n                FogLayer.redraw();\r\n\r\n                _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].setBufferData(savedata, ()=>{});\r\n                addTileIDtoEditList(_utils_id__WEBPACK_IMPORTED_MODULE_6__.tileID2Number(TileID));\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n/** 解析迷雾zip存档，里面可以嵌套多级目录 */\r\nfetch('Sync.zip').then(response => response.blob()).then(blob => parseFile(new File([blob], 'Sync.zip', { type: blob.type })));\r\nfunction parseFile(file) {\r\n\r\n    jszip__WEBPACK_IMPORTED_MODULE_12___default().loadAsync(file).then(function(zip) {\r\n\r\n        let count = Object.keys(zip.files).length;\r\n        let total = count;\r\n\r\n        let TileIDPointsList = {};\r\n        let ids = [];\r\n\r\n        // @ts-ignore\r\n        zip.forEach(function (relativePath, zipFile) {\r\n            let filename = zipFile.name.split(\"/\").pop();\r\n            // zipFile.dir: false\r\n            // zipFile.date: create Date\r\n            zipFile.async('arraybuffer').then(function(buffdata){\r\n\r\n                const tileID = _fow_utils__WEBPACK_IMPORTED_MODULE_3__.getTileIdByFilename(filename)\r\n\r\n                if(tileID > 0){\r\n                    let tile = new _data_tile128__WEBPACK_IMPORTED_MODULE_8__[\"default\"](tileID);\r\n\r\n                    tile.fromFOW(new Uint8Array(buffdata));\r\n\r\n                    TileIDPointsList[tile.getBufferID(64)] = tile.getTilePointsArray(64);\r\n                    TileIDPointsList[tile.getBufferID(8)] = tile.getTilePointsArray(8);\r\n                    TileIDPointsList[tile.getBufferID(1)] = tile.toOverviewPoints();\r\n\r\n                    ids.push(tileID);\r\n                }\r\n\r\n                count--;\r\n                Q('#importMSG').textContent = i18nStrings['readingFile'][lang] + ((total-count)/total * 100).toFixed(0) + \"%\";\r\n            \r\n                if(count == 0){\r\n                    Q('#importMSG').textContent = i18nStrings['saveToDB'][lang] ;\r\n                    _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].setBufferData(TileIDPointsList, () => {\r\n                        _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].set(\"TileIDS\", ids, () => {\r\n                            FogLayer.reloadAllFromDB();\r\n                            updateFileStatu(true);\r\n                            Q('#showModeTitle').click();\r\n                        });\r\n                        _database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].set(EditedTileIDs, null);\r\n                    });\r\n\r\n                }\r\n            })\r\n        })\r\n\r\n    }, (e)=> console.log(\"Error reading \" + file.name + \": \" + e.message))\r\n};\r\n\r\n_database_indexeddb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].initAndThen(loadingMap);\n\n//# sourceURL=webpack://fog.vicc.wang/./www/js/eraser/eraser.js?");

/***/ }),

/***/ "./www/js/fow/utils.js":
/*!*****************************!*\
  !*** ./www/js/fow/utils.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getTileIdByFilename\": () => (/* binding */ getTileIdByFilename),\n/* harmony export */   \"getFilenameByTileId\": () => (/* binding */ getFilenameByTileId)\n/* harmony export */ });\n/* harmony import */ var js_md5__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-md5 */ \"./node_modules/js-md5/src/md5.js\");\n/* harmony import */ var js_md5__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(js_md5__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n\r\n/** \r\n * 将迷雾的存档文件名解析为tileID\r\n * @type {(filename: string) => number} \r\n * */\r\nfunction getTileIdByFilename(filename){\r\n\r\n    const l_map = {'o': 0, 'l': 1, 'h': 2, 'w': 3, 'j': 4, 's': 5, 'k': 6, 't': 7, 'r': 8, 'i': 9 }\r\n\r\n    let tile_idx = 0;\r\n\r\n\r\n    // filename like \"008dlhjkswwx 2\"\r\n    let basename = filename.split(\" \")[0];\r\n\r\n    let l = basename.length;\r\n    if(l <= 10 || l > 12) return null;\r\n\r\n    for(var i=4; i<l-2; i++){\r\n        tile_idx += l_map[basename[i]] * (10**(l-3-i));\r\n    }\r\n\r\n    return tile_idx;\r\n}\r\n\r\n/** \r\n * 世界迷雾神奇的文件命名规则\r\n * 墨卡托地图分为 512 x 512 tile，y*512 + x 为tile id\r\n * tileID计算md5作为文件名前4个字符\r\n * tileID十进制数字换成字母作为后续文件名\r\n * 前4个字母：tileid\r\n * @type {(tileId: number) => string} \r\n * */\r\nfunction getFilenameByTileId(tileId) {\r\n    const s_map = 'olhwjsktri';\r\n    const s2map = 'eizxdwknmo';\r\n\r\n    let filename = \"\";\r\n\r\n    if(tileId > 100000) filename += s_map[Math.floor(tileId/100000)];\r\n    if(tileId > 10000) filename += s_map[Math.floor( tileId % 100000 /10000)];\r\n    if(tileId > 1000) filename += s_map[Math.floor( tileId % 10000 / 1000)];\r\n    if(tileId > 100) filename += s_map[Math.floor( tileId % 1000 / 100)];\r\n    filename += s_map[Math.floor( tileId % 100 / 10)];\r\n    filename += s_map[Math.floor( tileId % 10)];\r\n\r\n    filename += s2map[Math.floor( tileId % 100 / 10)];\r\n    filename += s2map[Math.floor( tileId % 10)];\r\n\r\n    let pre = js_md5__WEBPACK_IMPORTED_MODULE_0___default()(String(tileId)).slice(0,4);\r\n    return pre + filename;\r\n}\n\n//# sourceURL=webpack://fog.vicc.wang/./www/js/fow/utils.js?");

/***/ }),

/***/ "./www/js/render/webGLClass.js":
/*!*************************************!*\
  !*** ./www/js/render/webGLClass.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WebGLPoints)\n/* harmony export */ });\n/* harmony import */ var _webgl_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webgl_buffer */ \"./www/js/render/webgl_buffer.js\");\n/**\r\n * webgl绘制大量点\r\n * Vic Wang, 2022-05-09\r\n */\r\n// @ts-check\r\n\r\n\r\nconst vertexShaderSource = `\r\n    uniform mat4 u_matrix;\r\n    uniform vec4 a_color;\r\n    uniform vec4 a_color_bg;\r\n\r\n    attribute vec4 a_vertex;\r\n    attribute float a_pointSize;\r\n\r\n    varying vec4 v_color;\r\n    varying vec4 v_color_bg;\r\n\r\n    void main() {\r\n        // Set the size of the point\r\n        gl_PointSize =  a_pointSize;\r\n\r\n        // multiply each vertex by a matrix.\r\n        gl_Position = u_matrix * a_vertex;\r\n\r\n        // pass the color to the fragment shader\r\n        v_color = a_color;\r\n        v_color_bg = a_color_bg;\r\n    }\r\n`\r\nconst fragmentShaderSource = `\r\n    precision mediump float;\r\n    varying vec4 v_color;\r\n    varying vec4 v_color_bg;\r\n\r\n    void main() {\r\n        float border = 0.1;\r\n        float radius = 0.5;\r\n        vec4 color = v_color;\r\n        vec4 color0 = v_color_bg;\r\n\r\n        // ---------- Solution 1 --------------\r\n        vec2 m = gl_PointCoord.xy - vec2(0.5, 0.5);\r\n        float dist = radius - sqrt(m.x * m.x + m.y * m.y);\r\n\r\n        float t = 0.0;\r\n        if (dist > border)\r\n            t = 1.0;\r\n        else if (dist > 0.0)\r\n            t = dist / border;\r\n\r\n        // works for overlapping circles if blending is enabled\r\n        gl_FragColor = mix(color0, color, t);\r\n    }\r\n`  \r\nconst BYTES1M = 1024 * 1024\r\nconst MIN_BUFFER_SIZE = 1 * BYTES1M\r\nclass WebGLPoints {\r\n\r\n    /**\r\n     * 专门用于绘制固定点的WebGL\r\n     * @param {HTMLCanvasElement} canvas \r\n     */\r\n    constructor(canvas, options={}){\r\n        this.canvas = canvas\r\n        this.gl = this.canvas.getContext(\"webgl\", { antialias: true });\r\n        this.bufferSize = options.bufferSize || 8 * BYTES1M; // \r\n\r\n        if(this.bufferSize < MIN_BUFFER_SIZE) this.bufferSize = MIN_BUFFER_SIZE;\r\n\r\n        this.compileProgram();\r\n\r\n        this.ratio = 1;\r\n\r\n        this.setPointSize(6);\r\n        this.setColor(0.0, 0.5, 0, 0.8);\r\n        this.setBackgroundColor(0, 0, 0, 0);\r\n        this.setFogColor(0, 0, 0, 0.5);\r\n    }\r\n\r\n    // 编译Programe\r\n    compileProgram(){\r\n    \r\n        // -- WebGl setup\r\n        const vertexShader = this.gl.createShader(this.gl.VERTEX_SHADER);\r\n        this.gl.shaderSource(vertexShader, vertexShaderSource);\r\n        this.gl.compileShader(vertexShader);\r\n\r\n        const fragmentShader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\r\n        this.gl.shaderSource(fragmentShader, fragmentShaderSource);\r\n        this.gl.compileShader(fragmentShader);\r\n        \r\n        // link shaders to create our program\r\n        this.program = this.gl.createProgram();\r\n        this.gl.attachShader(this.program, vertexShader);\r\n        this.gl.attachShader(this.program, fragmentShader);\r\n\r\n        this.gl.linkProgram(this.program);\r\n        this.gl.useProgram(this.program);\r\n\r\n        // https://developer.mozilla.org/zh-CN/docs/Web/API/WebGLRenderingContext/blendFunc\r\n        this.gl.enable(this.gl.BLEND);\r\n\r\n        this.bufferMNG = new _webgl_buffer__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.gl, this.bufferSize); // 20M\r\n\r\n        this.vertLoc = this.gl.getAttribLocation(this.program, \"a_vertex\");\r\n        this.gl.enableVertexAttribArray(this.vertLoc);\r\n\r\n        this.colorLoc = this.gl.getUniformLocation(this.program, \"a_color\");\r\n        this.bgcolorLoc = this.gl.getUniformLocation(this.program, \"a_color_bg\");\r\n        this.u_matLoc = this.gl.getUniformLocation(this.program, \"u_matrix\");\r\n        this.pointSize = this.gl.getAttribLocation(this.program, \"a_pointSize\");\r\n        \r\n    }\r\n\r\n    setBlendMode(){\r\n        let gl = this.gl;\r\n        let ext = gl.getExtension(\"EXT_blend_minmax\");\r\n        gl.blendEquation(ext.MAX_EXT);\r\n    }\r\n\r\n    clear(){\r\n        let [r, g, b, a] = this.bgcolor;\r\n        this.gl.uniform4f(this.bgcolorLoc, r, g, b, a);\r\n\r\n        this.gl.clearColor(r, g, b, a);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);  \r\n    }\r\n\r\n    render(pointCnt){\r\n        // this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\r\n        this.setBlendMode();\r\n        this.gl.drawArrays(this.gl.POINTS, 0, pointCnt);\r\n    }\r\n\r\n    setFogBlendMode(){\r\n        let ext = this.gl.getExtension(\"EXT_blend_minmax\");\r\n        this.gl.blendEquation(ext.MIN_EXT);\r\n    }\r\n\r\n    coverWithFog(){\r\n        let [r, g, b, a] = this.fogColor;\r\n        this.gl.uniform4f(this.bgcolorLoc, r, g, b, a);\r\n\r\n        this.gl.clearColor(r, g, b, a);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n    }\r\n\r\n    renderPathInFog(pointCnt){\r\n        this.gl.uniform4f(this.colorLoc, 0.0, 0.0, 0.0, 0.0);\r\n        this.setFogBlendMode();\r\n        this.gl.drawArrays(this.gl.POINTS, 0, pointCnt);\r\n    }\r\n\r\n    /** @param {Uint16Array} pointsArray  */\r\n    setPointsArray(pointsArray){\r\n        // this.pointsArray = pointsArray;\r\n\r\n        const fsize = pointsArray.BYTES_PER_ELEMENT;\r\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, pointsArray, this.gl.STATIC_DRAW);\r\n\r\n        // vertexAttribPointer(index, size, type, normalized, stride, offset)\r\n        // this.gl.UNSIGNED_SHORT: unsigned 16-bit integer, with values in [0, 65535]\r\n        // this.gl.vertexAttribPointer(this.vertLoc, 2, this.gl.UNSIGNED_SHORT, false, fsize*2, 0);\r\n    }\r\n\r\n    setPointsArrayIndex(index){\r\n        const fsize = Uint16Array.BYTES_PER_ELEMENT;\r\n\r\n        this.gl.vertexAttribPointer(\r\n            this.vertLoc, 2, this.gl.UNSIGNED_SHORT, false, fsize*2, fsize*index);\r\n    }\r\n\r\n    /**\r\n     * @param {String} bufferID \r\n     * @param {Uint16Array} pointsArray\r\n     */\r\n    setBufferInfo(bufferID, pointsArray){\r\n        let bufferInfo = { // 保留offset和length属性\r\n            vert: this.vertLoc,\r\n            size: 2,\r\n            type: this.gl.UNSIGNED_SHORT,\r\n            normalized: false,\r\n            stride: Uint16Array.BYTES_PER_ELEMENT * 2,\r\n            pointsCnt: pointsArray.length / 2,\r\n        }\r\n        this.bufferMNG.setBufferData(bufferID, pointsArray.buffer, bufferInfo);\r\n    }\r\n\r\n    /**\r\n     * @param {String} bufferID \r\n     * @param {Uint8Array} pointsArray\r\n     */\r\n     setUint8BufferInfo(bufferID, pointsArray){\r\n        let bufferInfo = { // 保留offset和length属性\r\n            vert: this.vertLoc,\r\n            size: 2,\r\n            type: this.gl.UNSIGNED_BYTE,\r\n            normalized: false,\r\n            stride: Uint8Array.BYTES_PER_ELEMENT * 2,\r\n            pointsCnt: pointsArray.length / 2,\r\n        }\r\n        this.bufferMNG.setBufferData(bufferID, pointsArray.buffer, bufferInfo);\r\n    }\r\n\r\n    // use the buff for drawing\r\n    useBufferID(bufferID){\r\n        let bufferInfo = this.bufferMNG.getBufferInfo(bufferID);\r\n        if(bufferInfo === undefined) throw \"Buffer ID not exist\" + bufferID;\r\n\r\n        // this.gl.vertexAttribPointer(\r\n        //     this.vertLoc, 2, this.gl.UNSIGNED_SHORT, false, fsize*2, fsize*index);\r\n        // vertexAttribPointer(index, size, type, normalized, stride, offset)\r\n        this.gl.vertexAttribPointer(\r\n            bufferInfo.vert,\r\n            bufferInfo.size,\r\n            bufferInfo.type,\r\n            bufferInfo.normalized,\r\n            bufferInfo.stride,\r\n            bufferInfo.offsetInBytes // fsize * offset\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 绘制BufferID，路径模式\r\n     * @param {String} bufferID \r\n     */\r\n    renderBuffer(bufferID){\r\n        this.useBufferID(bufferID);\r\n        let pointsCnt = this.bufferMNG.getBufferInfo(bufferID).pointsCnt; \r\n\r\n        let [r, g, b, a] = this.color;\r\n        this.gl.uniform4f(this.colorLoc, r, g, b, a); \r\n        \r\n        this.setBlendMode();\r\n        this.gl.drawArrays(this.gl.POINTS, 0, pointsCnt);\r\n    }\r\n\r\n    /**\r\n     * 绘制BufferID，迷雾模式\r\n     * @param {String} bufferID \r\n     */\r\n    renderBufferInFog(bufferID){\r\n        this.useBufferID(bufferID);\r\n        let pointsCnt = this.bufferMNG.getBufferInfo(bufferID).pointsCnt; \r\n\r\n\r\n        this.gl.uniform4f(this.colorLoc, 0, 0, 0, 0); // clear fog out\r\n\r\n        this.setFogBlendMode();\r\n        this.gl.drawArrays(this.gl.POINTS, 0, pointsCnt);\r\n    }\r\n\r\n    /**\r\n     * 设置画布的像素密度\r\n     * @param {Number} ratio 像素密度 1~4\r\n     */\r\n    setPixelRatio(ratio){\r\n        if(ratio < 0.1 || ratio > 10) throw \"Pixel Ratio Error: \" + ratio;\r\n        this.ratio = ratio;\r\n    }\r\n\r\n    setCanvasSize(w, h){\r\n        this.canvas.width = w * this.ratio;\r\n        this.canvas.height = h * this.ratio;\r\n        this.gl.viewport(0, 0, w * this.ratio, h * this.ratio); // default\r\n    }\r\n\r\n    /**\r\n     * 设置webgl绘制的视窗大小\r\n     * @param {Number} x 画布x坐标，左下角为0\r\n     * @param {Number} y 画布y坐标，左下角为0\r\n     * @param {Number} w 窗口宽度，0到width之间\r\n     * @param {Number} h 窗口高度，0到height之间\r\n     * \r\n     */\r\n    setViewport(x, y, w, h){\r\n        this.gl.viewport(\r\n            x * this.ratio, y * this.ratio, \r\n            w * this.ratio, h * this.ratio);\r\n    }\r\n\r\n    setDataSize(w, h){\r\n        // Set the matrix to some that makes 1 unit 1 pixel.\r\n        // y = y * Sy + Ty\r\n        // x = x * Sy + Tx\r\n        this.setTransform(0, 0, w, h)\r\n    }\r\n\r\n    setTransform(startX, startY, sizeX, sizeY){\r\n        // Scale\r\n        const [Sx, Sy, Sz] = [2/sizeX, -2/sizeY, 0];\r\n        \r\n        // Translation (scale the startX, startY before translate)\r\n        const[Tx, Ty, Tz] = [ -1 - startX*(2/sizeX), 1 - startY*(-2/sizeY), 0]; \r\n\r\n        const matrix = [\r\n            Sx, 0,  0,  0,\r\n            0,  Sy, 0,  0, \r\n            0,  0,  0,  0, \r\n            Tx, Ty, Tz,  1\r\n        ]\r\n\r\n        this.gl.uniformMatrix4fv(this.u_matLoc, false, new Float32Array(matrix));\r\n    }\r\n\r\n    setBackgroundColor(r, g, b, a){\r\n        this.bgcolor = [r, g, b, a];\r\n    }\r\n\r\n    setFogColor(r, g, b, a){\r\n        this.fogColor = [r, g, b, a];\r\n    }\r\n\r\n    setColor(r, g, b, a){\r\n        this.color = [r, g, b, a];\r\n    }\r\n\r\n    setPointSize(pointSize){\r\n        this.gl.vertexAttrib1f(this.pointSize, pointSize);\r\n    }\r\n\r\n    /**\r\n     * 生成假数据点\r\n     * @param {Number} width 宽度\r\n     * @param {Number} height 高度\r\n     * @param {Number} cnt 数量\r\n     * @param {Number} maxspeed 移动速度\r\n     * @returns \r\n     */\r\n    fakeData(width, height, cnt, maxspeed=0){\r\n        // console.log(width, height, cnt, maxspeed);\r\n        // [x1, y1, x2, y2, x3, y3 .....]\r\n        \r\n        // -- data\r\n        let verts = new Uint16Array(cnt*2);\r\n\r\n        let x = Math.random() * width;\r\n        let y = Math.random() * height;\r\n\r\n        let s =  1 + Math.random() * maxspeed;\r\n\r\n        let mx = s * (2 * Math.random() - 1);\r\n        let my = s * (2 * Math.random() - 1);\r\n\r\n        for(let i=0; i<cnt; i++){\r\n\r\n            let r = Math.random();\r\n\r\n            if(r < 0.01){\r\n                x = Math.random() * width;\r\n                y = Math.random() * height;\r\n            } else if( r < 0.1 / s){\r\n                s = 1 + Math.random() * maxspeed;\r\n            } else if( r < 0.2 / s){\r\n                mx = s * (2 * Math.random() - 1);\r\n                my = s * (2 * Math.random() - 1);\r\n            } else {\r\n                x += mx;\r\n                y += my;\r\n            }\r\n\r\n            if(x < 0 || x > width || y < 0 || y > height){\r\n                x = Math.random() * width;\r\n                y = Math.random() * height;\r\n            }\r\n\r\n            verts[i*2] = Math.floor(x);\r\n            verts[i*2+1] = Math.floor(y);\r\n        };\r\n\r\n        return verts;\r\n    }\r\n}\n\n//# sourceURL=webpack://fog.vicc.wang/./www/js/render/webGLClass.js?");

/***/ }),

/***/ "./www/js/render/webgl_buffer.js":
/*!***************************************!*\
  !*** ./www/js/render/webgl_buffer.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WebGLBuffer)\n/* harmony export */ });\n// 用于管理WebGL的内存数据\r\n// @ts-check\r\n\r\nclass WebGLBuffer {\r\n\r\n    /**\r\n     * @param {WebGLRenderingContext} gl\r\n     * @param {Number} maxByteSize 创建的内存大小，推荐20M起步\r\n    */\r\n    constructor(gl, maxByteSize){\r\n        this.gl = gl;\r\n        this.offsetInBytes = 0;\r\n        this.maxByteSize = maxByteSize;\r\n\r\n        this.vertBuffer = this.gl.createBuffer();\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertBuffer);\r\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, maxByteSize, this.gl.STATIC_DRAW);\r\n        // BufferID { offsetInBytes, Bytelength, ...}\r\n        this.bufferInfo = {};\r\n    }\r\n\r\n    hasBuffer(bufferID){\r\n        return this.bufferInfo[bufferID] !== undefined;\r\n    }\r\n\r\n    getBufferInfo(bufferID){\r\n        return this.bufferInfo[bufferID];\r\n    }\r\n\r\n    /**\r\n     * 移除已经缓存的buffer\r\n     **/ \r\n    clearBuffer(bufferID){\r\n        delete this.bufferInfo[bufferID]\r\n    }\r\n\r\n    /**\r\n     * 移除全部缓存的buffer\r\n     **/ \r\n    clearAllBuffer(){\r\n        this.offsetInBytes = 0;\r\n        this.bufferInfo = {};\r\n    }\r\n\r\n    printInfo(){\r\n        let buffer_size = this.gl.getBufferParameter(this.gl.ARRAY_BUFFER, this.gl.BUFFER_SIZE);\r\n        let usage = this.gl.getBufferParameter(this.gl.ARRAY_BUFFER, this.gl.BUFFER_USAGE);\r\n        console.log((usage/1024/1024).toPrecision(5), \"/\", (buffer_size/1024/1024).toFixed(5), \"MB\");\r\n\r\n        let byteSum = 0;\r\n        let byteProtect = 0;\r\n\r\n        Object.values(this.bufferInfo).forEach(v => byteSum += v.byteLength);\r\n        Object.values(this.bufferInfo).filter(i => i.protect).forEach(v => byteProtect += v.byteLength);\r\n        console.log(\"byte Sum: \",  (byteSum/1024/1024).toPrecision(5), \"MB\");\r\n        console.log(\"byte Protect: \",  (byteProtect/1024/1024).toPrecision(5), \"MB\");\r\n    }\r\n\r\n    protect(bufferID){\r\n        this.bufferInfo[bufferID].protect = true;\r\n    }\r\n\r\n    /** \r\n     * @param {String} bufferID\r\n     * @param {ArrayBuffer} arraybuffer \r\n     * @param {Object} bufferInfo\r\n    */\r\n    setBufferData(bufferID, arraybuffer, bufferInfo){\r\n\r\n        // 如果已经存在，清理\r\n        if(this.hasBuffer(bufferID)) {\r\n            delete this.bufferInfo[bufferID];\r\n        }\r\n\r\n        let byteLength = arraybuffer.byteLength;\r\n\r\n        // 如果有保护的buffer，会跳过，重新设置offsetInBytes\r\n        this.checkProtectBuffer(byteLength);\r\n\r\n        bufferInfo.offsetInBytes = this.offsetInBytes ;\r\n        bufferInfo.byteLength = byteLength;\r\n\r\n        this.bufferInfo[bufferID] = bufferInfo;\r\n\r\n        this.gl.bufferSubData(this.gl.ARRAY_BUFFER, this.offsetInBytes, arraybuffer);\r\n\r\n        // 最后更新下一个偏移量\r\n        this.offsetInBytes += byteLength;\r\n        // console.log(\"add\", byteLength, \"bytes to array buffer\");\r\n    }\r\n    \r\n    /** \r\n     * 检查从offset开始的length长度的内存\r\n     * @param {Number} byteLength\r\n    */\r\n    checkProtectBuffer(byteLength, n=0){\r\n        // 如果长度太长，重新从0开始，\r\n        if(this.offsetInBytes + byteLength >= this.maxByteSize){\r\n            this.offsetInBytes = 0;\r\n        }\r\n        if(n > 100) throw \"can not associate enough memory\";\r\n\r\n        let bufferIDs = Object.keys(this.bufferInfo);\r\n        for(let i=0; i<bufferIDs.length; i++){\r\n            let bufferID = bufferIDs[i];\r\n            let bufferInfo = this.bufferInfo[bufferID];\r\n\r\n            let bufferOffset = bufferInfo.offsetInBytes;\r\n\r\n            if(this.offsetInBytes <= bufferOffset && bufferOffset < this.offsetInBytes + byteLength){\r\n                if(bufferInfo.protect == true){\r\n                    this.offsetInBytes = bufferInfo.offsetInBytes + bufferInfo.byteLength;\r\n                    this.checkProtectBuffer(byteLength, n+1)\r\n                    return;\r\n                } else {\r\n                    delete this.bufferInfo[bufferID]; // remove the info\r\n                }\r\n            }\r\n        }\r\n    }\r\n        \r\n}\r\n\r\n\r\n// gl.bindBuffer(gl.ARRAY_BUFFER, buf);\r\n// gl.bufferSubData(gl.ARRAY_BUFFER, offsetInBytes, data);\n\n//# sourceURL=webpack://fog.vicc.wang/./www/js/render/webgl_buffer.js?");

/***/ }),

/***/ "./www/js/settings/config.js":
/*!***********************************!*\
  !*** ./www/js/settings/config.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Config\": () => (/* binding */ Config)\n/* harmony export */ });\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! leaflet */ \"leaflet\");\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(leaflet__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_leaflet_ChineseTmsProviders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/leaflet.ChineseTmsProviders */ \"./www/lib/leaflet.ChineseTmsProviders.js\");\n/* harmony import */ var _lib_leaflet_ChineseTmsProviders__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_lib_leaflet_ChineseTmsProviders__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_leaflet_mapCorrection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/leaflet.mapCorrection.js */ \"./www/lib/leaflet.mapCorrection.js\");\n/* harmony import */ var _lib_leaflet_mapCorrection_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_lib_leaflet_mapCorrection_js__WEBPACK_IMPORTED_MODULE_2__);\n// config.js\r\n// 常量配置表\r\n\r\n// Author: Vic Wang\r\n// Create Date: 2021-06-23\r\n\r\n\r\n\r\n\r\n// Open Street Map\r\nlet osm = L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", { subdomains: ['a', 'b', 'c']});\r\nlet osmCycIOSM = L.tileLayer(\"https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\", {subdomains: ['a', 'b', 'c']});\r\nlet osmOPNVKarte = L.tileLayer(\"https://tileserver.memomaps.de/tilegen/{z}/{x}/{y}.png\");\r\nlet osmHumanitarian = L.tileLayer(\"https://tile-{s}.openstreetmap.fr/hot/{z}/{x}/{y}.png\", {subdomains: ['a', 'b', 'c']});\r\n\r\nlet openrailwaymap = L.tileLayer(\"https://{s}.tiles.openrailwaymap.org/standard/{z}/{x}/{y}.png\", { subdomains: ['a', 'b', 'c']})\r\nlet opentopomap = L.tileLayer(\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\", { subdomains: ['a', 'b', 'c']})\r\nlet openseamap = L.tileLayer(\"https://{s}.openseamap.org/seamark/{z}/{x}/{y}.png\", { subdomains: ['t1']})\r\n\r\nlet GoogleStandard = L.tileLayer('https://mt1.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {subdomains: ['mt1', 'mt2', 'mt3', 'mt4']});\r\nlet GoogleSatellite = L.tileLayer('https://mt1.google.com/vt/lyrs=y&x={x}&y={y}&z={z}', {subdomains: ['mt1', 'mt2', 'mt3', 'mt4']});\r\n\r\nlet StamenWatercolor = L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.jpg', \r\n\t\t\t\t\t\t\t\t\t{\tsubdomains: ['a', 'b', 'c', 'd'], \r\n\t\t\t\t\t\t\t\t\t\tmaxNativeZoom: 15,\r\n\t\t\t\t\t\t\t\t\t});\r\nlet StamenTerrain = L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}.jpg', \r\n\t\t\t\t\t\t\t\t\t{\tsubdomains: ['a', 'b', 'c', 'd'], \r\n\t\t\t\t\t\t\t\t\t\tmaxNativeZoom: 15,\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\nlet StamenToner = L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}@2x.png', {\r\n\tmaxNativeZoom: 10,\r\n\tsubdomains: ['a', 'b', 'c', 'd']\r\n});\r\n\r\n\r\nlet Config = {\r\n\r\n\t// Tile Size, 每个地图块的像素大小\r\n\ttileSize: 256,\r\n\r\n\t// tileDataSize\r\n\ttileDataSize: 512,\r\n\r\n\t// 雾设置\r\n\tmaxFogZoom: 13,\r\n\tminFogZoom: 1,\r\n\r\n\t// 地图最大缩放比例\r\n\tmaxNativeZoom: 15,\r\n\r\n\t// 地图最小缩放比例\r\n\tminNativeZoom: 2,\r\n\r\n\r\n\t// 是否是测试模式\r\n\tdebug: false,\r\n\r\n\tbaseMaps: {\r\n\r\n\t\t\"StamenWatercolor\": StamenWatercolor,\r\n\t\t\"StamenTerrain\": StamenTerrain,\r\n\t\t\"StamenToner\": StamenToner,\r\n\t\t\"OpenRailway\": openrailwaymap,\r\n\t\t\"OpenTopo\": opentopomap,\r\n\t\t\"OpenSea\": openseamap,\r\n\r\n\t\t\"CycIOSM\": osmCycIOSM,\r\n\t\r\n\t\t\"ÖPNVKarte\": osmOPNVKarte,\r\n\t\t\"Humanitarian\": osmHumanitarian,\r\n\r\n\t\t\"OpenStreet\": osm,\r\n\t\r\n\t\t\"Google\": GoogleStandard,\r\n\t\t\"Google卫星\": GoogleSatellite,\r\n\t\t\"Google地形\": GoogleSatellite,\r\n\t}\r\n}\r\n\r\n// GoogleNormal = L.tileLayer.chinaProvider('Google.Normal.Map');\r\n// GoogleSatellite = L.tileLayer.chinaProvider('Google.Satellite.Map');\r\n//     h = roads only\r\n// m = standard roadmap\r\n// p = terrain\r\n// r = somehow altered roadmap\r\n// s = satellite only\r\n// t = terrain only\r\n// y = hybrid\r\n  //添加底图\r\n\r\n\n\n//# sourceURL=webpack://fog.vicc.wang/./www/js/settings/config.js?");

/***/ }),

/***/ "./www/js/utils/arraybuffer.js":
/*!*************************************!*\
  !*** ./www/js/utils/arraybuffer.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"subPoints\": () => (/* binding */ subPoints),\n/* harmony export */   \"subUint8Points\": () => (/* binding */ subUint8Points),\n/* harmony export */   \"offsetPoints\": () => (/* binding */ offsetPoints),\n/* harmony export */   \"offsetUint8Points\": () => (/* binding */ offsetUint8Points),\n/* harmony export */   \"mergeUint16Array\": () => (/* binding */ mergeUint16Array),\n/* harmony export */   \"mergeUint8Array\": () => (/* binding */ mergeUint8Array),\n/* harmony export */   \"removePoints\": () => (/* binding */ removePoints),\n/* harmony export */   \"removePointsAuto\": () => (/* binding */ removePointsAuto)\n/* harmony export */ });\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ \"./www/js/utils/math.js\");\n// @ts-check\r\n\r\n\r\n/**\r\n * Uint16Array Points => 上n个级别\r\n * TODO: Uint16Array => Uint32Array => uniq => Uint16Array;\r\n * @param {Uint16Array} points\r\n * @param {Number} n 降低级别 1,2,3,4 => 2,4,8,16\r\n * @returns {Uint16Array}\r\n */\r\nfunction subPoints(points, n=1){\r\n    let a = new Set();\r\n    let base = Math.pow(2, 16);\r\n\r\n    for(let i=0; i<points.length; i+=2){\r\n        let x = points[i] >> n;\r\n        let y = points[i+1] >> n;\r\n\r\n        a.add((y<<16) + x);\r\n    }\r\n    \r\n    let ret = new Uint16Array(a.size * 2);\r\n\r\n    let i = 0;\r\n    a.forEach(v => {\r\n        let y = v >> 16;\r\n        let x = v % base;\r\n\r\n        ret[i*2] = x;\r\n        ret[i*2+1] = y;\r\n        i++;\r\n    })\r\n    return ret;\r\n}\r\n\r\n/**\r\n * Uint8Array Points => 上n个级别\r\n * TODO: Uint8Array => Uint16Array => uniq => Uint8Array;\r\n * @param {Uint8Array} points\r\n * @param {Number} n 降低级别 1,2,3 => 2,4,8\r\n * @returns {Uint8Array}\r\n */\r\n function subUint8Points(points, n=1){\r\n    let a = new Set();\r\n    let base = Math.pow(2, 8);\r\n\r\n    for(let i=0; i<points.length; i+=2){\r\n        let x = points[i] >> n;\r\n        let y = points[i+1] >> n;\r\n\r\n        a.add((y<<8) + x);\r\n    }\r\n    \r\n    let ret = new Uint8Array(a.size * 2);\r\n\r\n    let i = 0;\r\n    a.forEach(v => {\r\n        let y = v >> 8;\r\n        let x = v % base;\r\n\r\n        ret[i*2] = x;\r\n        ret[i*2+1] = y;\r\n        i++;\r\n    })\r\n    return ret;\r\n}\r\n\r\n/**\r\n * Uint16Array Points => 将数据位置偏移一部分便宜\r\n *  TODO: Uint16Array => Uint32Array => offset => Uint16Array;\r\n * @param {Uint16Array} points\r\n * @param {Number} dx 偏移x\r\n * @param {Number} dy 偏移y\r\n * @returns {Uint16Array}\r\n */\r\nfunction offsetPoints(points, dx, dy){\r\n    let newPoints = Uint16Array.from(points);\r\n    if(dx==0 && dy==0) return newPoints;\r\n    \r\n    for(let i=0; i<newPoints.length; i+=2){\r\n        newPoints[i] += dx;\r\n        newPoints[i+1] += dy;\r\n    }\r\n    return newPoints;\r\n}\r\n\r\n/**\r\n * Uint16Array Points => 将数据位置偏移一部分便宜\r\n *  TODO: Uint16Array => Uint32Array => offset => Uint16Array;\r\n * @param {Uint8Array} points\r\n * @param {Number} dx 偏移x\r\n * @param {Number} dy 偏移y\r\n * @returns {Uint8Array}\r\n */\r\n function offsetUint8Points(points, dx, dy){\r\n    // console.assert(0 <= dx && dx < 256, \"dx should in [0, 256)\");\r\n    // console.assert(0 <= dy && dy < 256, \"dy should in [0, 256)\");\r\n    let newPoints = new Uint8Array(points.length);\r\n    newPoints.set(points, 0);\r\n\r\n    if(dx==0 && dy==0) return newPoints;\r\n    \r\n    let offset = new Uint16Array(new Uint8Array([dx, dy]).buffer)[0];\r\n    let u16arr = new Uint16Array(newPoints.buffer);\r\n\r\n    u16arr.forEach((v, i) => {\r\n        u16arr[i] = u16arr[i] | offset;\r\n    })\r\n    \r\n    return newPoints;\r\n}\r\n\r\n/**\r\n * Uint16Array Points => 合并所有的ArrayBuffer\r\n * @param {Array<Uint16Array>} arrays\r\n * @returns {Uint16Array}\r\n */\r\nfunction mergeUint16Array(arrays) {\r\n    let totalLength = 0;\r\n    for (let arr of arrays) {\r\n      totalLength += arr.length;\r\n    }\r\n    let result = new Uint16Array(totalLength);\r\n    let offset = 0;\r\n    for (let arr of arrays) {\r\n      result.set(arr, offset);\r\n      offset += arr.length;\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Uint16Array Points => 合并所有的ArrayBuffer\r\n * @param {Array<Uint8Array>} arrays\r\n * @returns {Uint8Array}\r\n */\r\n function mergeUint8Array(arrays) {\r\n    let totalLength = 0;\r\n    for (let arr of arrays) {\r\n      totalLength += arr.length;\r\n    }\r\n    let result = new Uint8Array(totalLength);\r\n    let offset = 0;\r\n    for (let arr of arrays) {\r\n      result.set(arr, offset);\r\n      offset += arr.length;\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\nfunction isInside(p, c, r){\r\n    let dx = Math.abs(p.x - c.x);\r\n    let dy = Math.abs(p.y - c.y);\r\n    if(dx > r || dy > r) return false;\r\n\r\n    let d = Math.sqrt(dx*dx + dy*dy);\r\n    return d < r;\r\n}\r\n/**\r\n * 清除区域中的点，返回剩余的点和清楚的点\r\n * @param {Uint16Array} array\r\n * @param {Object} point\r\n * @param {Number} radius \r\n * @returns {Object}\r\n */\r\nfunction removePoints(array, point, radius){\r\n    let new_array = new Uint16Array(array.length);\r\n    let k = 0;\r\n    let m = array.length;\r\n\r\n    for (let i=0; i<array.length; i+=2){\r\n        let x = array[i];\r\n        let y = array[i+1];\r\n        if(isInside({x, y}, point, radius)){\r\n            m -= 2;\r\n\r\n            new_array[m] = x;\r\n            new_array[m+1] = y;\r\n            \r\n            continue;\r\n        }\r\n        new_array[k] = x;\r\n        new_array[k+1] = y;\r\n        k += 2;\r\n    }\r\n    return {\r\n        reminedPoints: new_array.slice(0, k),\r\n        deletedPoints: new_array.slice(m, array.length)\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * 智能清除区域中的连续点，返回剩余的点和清楚的点\r\n * @param {Uint16Array} array\r\n * @param {Object} point\r\n * @param {Number} radius \r\n * @returns {Object}\r\n */\r\n function removePointsAuto(array, point, radius){\r\n    let bitset = new Set();\r\n    let removeSet = new Set();\r\n\r\n    for(let i=0; i<array.length; i+=2){\r\n        let x = array[i];\r\n        let y = array[i+1];\r\n        bitset.add((y<<16) + x);\r\n    }\r\n\r\n    for (let i=0; i<array.length; i+=2){\r\n        let x = array[i];\r\n        let y = array[i+1];\r\n        if(isInside({x, y}, point, radius)){        \r\n            removeSet.add((y<<16) + x);\r\n        }\r\n    }\r\n\r\n    removeSet = _removePointsAuto(bitset, removeSet);\r\n\r\n    let reminedPoints = new Uint16Array((bitset.size - removeSet.size) * 2);\r\n    let deletedPoints = new Uint16Array(removeSet.size * 2);\r\n\r\n    let i = 0, j=0, base = (1<<16)\r\n    bitset.forEach((v) => {\r\n        if(removeSet.has(v)) {\r\n            deletedPoints[j] = v % base;\r\n            deletedPoints[j+1] = v >> 16;\r\n            j += 2;\r\n        } else {\r\n            reminedPoints[i] = v % base;\r\n            reminedPoints[i+1] = v >> 16;\r\n            i+=2;\r\n        }\r\n    })    \r\n\r\n    return {\r\n        reminedPoints: reminedPoints,\r\n        deletedPoints: deletedPoints\r\n    };\r\n}\r\n\r\n/**\r\n * 智能清除区域中的连续点，返回剩余的点和清楚的点\r\n * @param {Set} bitset\r\n * @param {Set} removeSet\r\n * @returns {Set}\r\n */\r\n function _removePointsAuto(bitset, removeSet){\r\n\r\n    let nextPs = removeSet;\r\n\r\n    let i = 0;\r\n    while(nextPs.size > 0){\r\n\r\n        if(i>100) return removeSet;\r\n\r\n        nextPs = _findConcatPoints(bitset, nextPs, removeSet);\r\n        nextPs.forEach(v => removeSet.add(v)); // 加入到删除列表中        \r\n\r\n        i+=1;\r\n    }\r\n    return removeSet;\r\n };\r\n\r\n\r\n let n=0;\r\n /**\r\n  * 找到周围连接的点\r\n  * @param {Set} bitset \r\n  * @param {Set} nextPs \r\n  * @param {Set} removePs \r\n  */\r\n function _findConcatPoints(bitset, nextPs, removePs){\r\n\r\n    let ps = new Set();\r\n    let y1 = 1 << 16;\r\n\r\n    // 加入上下左右的点\r\n    nextPs.forEach((v) => {\r\n        ps.add(v   - y1);\r\n        ps.add(v - 1);\r\n        ps.add(v + 1);\r\n        ps.add(v   + y1);\r\n        ps.add(v - 1 - y1);\r\n        ps.add(v - 1 + y1);\r\n        ps.add(v + 1 - y1);\r\n        ps.add(v + 1 + y1);\r\n    })\r\n\r\n    nextPs = new Set();\r\n    ps.forEach((v) => {\r\n        // 如果已经在移除列表里，去掉\r\n        if( !removePs.has(v)                // 不在移除列表中\r\n            && bitset.has(v)                // 在图中\r\n            && _isConcat2Point(bitset, v)){ // 是前后的连接点\r\n            nextPs.add(v);\r\n        }\r\n    })\r\n    n += 1;\r\n    return nextPs;\r\n}\r\n\r\n/** 是否是连接2-3个点的点 \r\n * @param {Set} bitset\r\n * @param {Number} v\r\n * @returns {Boolean}\r\n*/\r\nfunction _isConcat2Point(bitset, v){\r\n\r\n    let y1 = 1 << 16;\r\n\r\n    let ps = [\r\n        v - 1,\r\n        v + 1,\r\n        v - y1,\r\n        v + y1,\r\n\r\n        v - 1 - y1,\r\n        v - 1 + y1,\r\n        v + 1 - y1,\r\n        v + 1 + y1\r\n    ] \r\n\r\n    let _cnt = 0;\r\n    for(let v of ps){\r\n        if(bitset.has(v)){\r\n            _cnt++;\r\n            if(_cnt > 3) return false;\r\n        }\r\n    }\r\n    return _cnt <= 3;\r\n}\r\n\r\n/** 找到连接点 \r\n * @param {Set} bitset\r\n * @param {Number} v\r\n * @returns {Array<Number>}\r\n*/\r\nfunction _getConcatPoint(bitset, v){\r\n    let ret = [];\r\n    let y1 = 1 << 16;\r\n\r\n    let ps = [\r\n        v - 1,\r\n        v + 1,\r\n        v - y1,\r\n        v + y1,\r\n\r\n        v - 1 - y1,\r\n        v - 1 + y1,\r\n        v + 1 - y1,\r\n        v + 1 + y1\r\n    ] \r\n\r\n    ps.forEach(v => {\r\n        if(bitset.has(v)) ret.push(v);\r\n    })\r\n    \r\n    return ret;\r\n}\n\n//# sourceURL=webpack://fog.vicc.wang/./www/js/utils/arraybuffer.js?");

/***/ }),

/***/ "./www/js/utils/coords.js":
/*!********************************!*\
  !*** ./www/js/utils/coords.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Coords)\n/* harmony export */ });\nconst round = Math.round;\r\nconst floor = Math.floor;\r\nconst min = Math.min;\r\nconst max = Math.max;\r\nconst pow = Math.pow;\r\nconst log2 = Math.log2;\r\n\r\n/**\r\n * 2022-05-14 Vic Wang\r\n * new coord 使用x, y, z\r\n\r\n * 定义个地图专用数据格式\r\n * 1, 代表点，x, y, z\r\n * 2，代表距离, x, y, z (w, h, z) \r\n * \r\n * 所有方法都返回一个新的Coord\r\n */\r\nclass Coords {\r\n    \r\n    /**\r\n     * \r\n     * @param {Number} x 0 ~ 2^z 之间\r\n     * @param {Number} y 0 ~ 2^z 之间\r\n     * @param {Number} z 0 ~ 32 之间\r\n     */\r\n    constructor(x, y, z){\r\n        let n = pow(2, z);\r\n\r\n        console.assert(-n <= x && x <= n, \"x should be [0, 2^z):\" + [x, y, z].join(','));\r\n        console.assert(-n <= y && y <= n, \"y should in [0, 2^z):\" + [x, y, z].join(','));\r\n        console.assert(-n <= z && z <= 31, \"z should in [0, 32):\" + [x, y, z].join(','));\r\n\r\n        this.x = Number(x);\r\n        this.y = Number(y);\r\n        this.z = Number(z);\r\n    }\r\n\r\n    /**\r\n     * 返回最小的值\r\n     * @param  {...Coords} coordss \r\n     * @returns {Coords}\r\n     */\r\n    static min(...coordss){\r\n        let z = max(...coordss.map(coords => coords.z)); // 取最大的最精准\r\n        let x = min(...coordss.map(coords => coords.at(z).x));\r\n        let y = min(...coordss.map(coords => coords.at(z).y));\r\n        return new Coords(x, y, z);\r\n    }\r\n\r\n    /**\r\n     * 返回最大的值\r\n     * @param  {...Coords} coordss \r\n     * @returns {Coords}\r\n     */\r\n    static max(...coordss){\r\n        let z = max(...coordss.map(coords => coords.z));\r\n        let x = max(...coordss.map(coords => coords.at(z).x));\r\n        let y = max(...coordss.map(coords => coords.at(z).y));\r\n        return new Coords(x, y, z);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} id 序号\r\n     * @param {Number} z 整数\r\n     */\r\n    static fromID(id, z){\r\n        let n = pow(2, z);\r\n        let x = floor(id % n);\r\n        let y = floor(id / n);\r\n        console.assert(y < n, \"y should less than 2^z\");\r\n        return new Coords(x, y, z);\r\n    }\r\n\r\n    static fromKey(key){\r\n        let [x, y, z] = key.split(',');\r\n        return new Coords(x, y, z);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {ArrayBufferView} uintarray \r\n     * @return {Coords}\r\n     */\r\n    static fromUintArrayKey(uintarray){\r\n        console.assert(uintarray.length == 3, \"wrong uintarray\");\r\n        return new Coords(...uintarray)\r\n    }\r\n\r\n    \r\n    static size(z){\r\n        return pow(2, z);\r\n    }\r\n\r\n    // 在z视图下的ID\r\n    toID(){\r\n        console.assert(floor(this.z) == this.z, \"z should be integer\");\r\n        let coord = this.floor();\r\n        return coord.y * pow(2, coord.z) + coord.x;\r\n    }\r\n\r\n    toString(){\r\n        return [this.x, this.y, this.z].join(\",\");\r\n    }\r\n\r\n    /**\r\n     * 获得一个Uint16Array key\r\n     * @returns {ArrayBufferTypes}\r\n     */\r\n    toUintArrayKey(){\r\n        if(this.z <= 8){\r\n            return Uint8Array.from([this.x, this.y, this.z])\r\n        } else if (this.z <= 16){\r\n            return Uint16Array.from([this.x, this.y, this.z]);\r\n        } else {\r\n            return Uint32Array.from([this.x, this.y, this.z])\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 复制一个对象\r\n     * @return {Coords} \r\n     */\r\n    clone(){\r\n        return new Coords(this.x, this.y, this.z);\r\n    }\r\n\r\n    /**\r\n     * 返回整数x、y，取整后计算，返回一个新对象\r\n     * @return {Coords} \r\n     * @returns {Coords}\r\n     */\r\n    floor(){\r\n        return new Coords(floor(this.x), floor(this.y), this.z);\r\n    }\r\n\r\n    /**\r\n     * 返回整数x、y，取近视值计算，返回一个新对象\r\n     * @return {Coords} \r\n     * @returns {Coords}\r\n     */\r\n    round(){\r\n        return new Coords(round(this.x), round(this.y), this.z);\r\n    }\r\n\r\n    /**在自身上增加一个量\r\n     * @param {Coords} coords\r\n     * @returns {Coords}\r\n     */\r\n    add(coords){\r\n        coords = coords.at(this.z);\r\n        let n = pow(2, this.z);\r\n\r\n        this.x += coords.x;\r\n        this.y += coords.y;\r\n\r\n        console.assert(this.x < n, \"x should less than 2^z\");\r\n        console.assert(this.y < n, \"y should less than 2^z\");\r\n        return this;\r\n    }\r\n\r\n    addXYZ(x, y, z){\r\n        return this.add(new Coords(x, y, z));\r\n    }\r\n\r\n    /**在自身上减少一个量\r\n     * @param { Coords } coords\r\n     * @returns {Coords}\r\n     */\r\n    sub(coords){\r\n        coords = coords.at(this.z);\r\n        this.x -= coords.x;\r\n        this.y -= coords.y;\r\n        return this;\r\n    }\r\n\r\n    subXYZ(x, y, z){\r\n        return this.sub(new Coords(x, y, z));\r\n    }\r\n\r\n    /**\r\n     * 返回一个新的位于Z维度的Coords\r\n     * @param {Number} z\r\n     * @returns {Coords}\r\n     */\r\n    at(z){\r\n        let n = Math.pow(2, z-this.z);\r\n        return new Coords(this.x * n, this.y * n, z);\r\n    }\r\n\r\n    \r\n    /**\r\n     * 变为一个新的z\r\n     * @param {Number} z\r\n     * @returns {Coords}\r\n     */\r\n    turn(z){\r\n        let n = Math.pow(2, z-this.z);\r\n        this.x *= n;\r\n        this.y *= n;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 返回在z时的宽度\r\n     * @param {Number} z\r\n     */\r\n    sizeAt(z){\r\n        return pow(2, z - this.z);\r\n    }\r\n\r\n    /**\r\n     * 是否相等\r\n     * @param {Coords} coords \r\n     * @returns {Boolean}\r\n     */\r\n    equal(coords){\r\n        coords = coords.at(this.z);\r\n        return this.x == coords.x && this.y == coords.y;\r\n    }\r\n\r\n    equalXYZ(x, y, z){\r\n        return this.equal(new Coords(x, y, z));\r\n    }\r\n\r\n    /**\r\n     * 小于某个点，即x < coords.x, y < coords.y\r\n     * @param {Coords} coords \r\n     * @param {Boolean} equal equal时是否为真\r\n     */\r\n    lessThan(coords, equal=true){\r\n        coords = coords.at(this.z);\r\n        if(equal) return this.x <= coords.x && this.y <= coords.y;\r\n        else return this.x < coords.x && this.y < coords.y;\r\n    }\r\n\r\n    /**\r\n     * 大于某个点，即x > coords.x, y > coords.y\r\n     * @param {Coords} coords \r\n     * @param {Boolean} equal equal时是否为真\r\n     */\r\n    biggerThan(coords, equal=true){\r\n        coords = coords.at(this.z);\r\n        if(equal) return this.x >= coords.x && this.y >= coords.y;\r\n        else return this.x > coords.x && this.y > coords.y;\r\n    }\r\n\r\n    /**\r\n     * 在某个点之间，即x > coords.x, y > coords.y\r\n     * @param {Coords} coords \r\n     * @param {Boolean} equal equal时是否为真\r\n     */\r\n    isBetween(coords1, coords2, equal=true){\r\n        coordsLT = Coords.min(coords1, coords2);\r\n        coordsRB = Coords.max(coords1, coords2);\r\n\r\n        return this.biggerThan(coordsLT, equal) && this.lessThan(coordsRB, equal);\r\n    }\r\n\r\n    /**\r\n     * 是否包含整个coord\r\n     * @param {Coord} coords \r\n     * @returns {Coords}\r\n     */\r\n    has(coords){\r\n        if(coords.z < this.z) return false;\r\n        return this.equal(coords.at(this.z).floor());\r\n    }\r\n\r\n    /**\r\n     * 偏移一定的位置\r\n     * @param {Coords} coords \r\n     * @returns {Coords}\r\n     */\r\n    offset(coords){\r\n        return this.add(coords);\r\n    }\r\n\r\n    /**\r\n     * 往反方向偏移一定的位置\r\n     * @param {Coords} coords \r\n     * @returns {Coords}\r\n     */\r\n    offsetNegative(coords){\r\n        return this.sub(coords);\r\n    }\r\n\r\n    /**\r\n     * 用于变换坐标系\r\n     * 如：this坐标 (64, 32, 7) 位于 coords(420, 210, 9) 中\r\n     * 变换后即为：(420 << 7 + 64, 210 << 7 + 32, 16);\r\n     * @param {Coords} coords\r\n     * @returns {Coords}\r\n     */\r\n    multify(coords){\r\n        this.z += coords.z;\r\n        return this.add(coords);\r\n    }\r\n\r\n    /**\r\n     * 用于获取变换后的坐标\r\n     * @param {Coords} coords\r\n     * @returns {Coords}\r\n     */\r\n    divide(coords){\r\n        this.sub(coords);\r\n        this.z -= coords.z;\r\n        this.assert();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 验证数据是否在范围内\r\n     */\r\n    assert(){\r\n        let {x, y, z} = this;\r\n        let n = pow(2, this.z);\r\n        console.assert(-n <= z && z <= 31, \"z should in [0, 32):\" + [x, y, z].join(','));\r\n        console.assert(-n <= x && x <= n, \"x should be [0, 2^z):\" + [x, y, z].join(','));\r\n        console.assert(-n <= y && y <= n, \"y should in [0, 2^z):\" + [x, y, z].join(','));\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://fog.vicc.wang/./www/js/utils/coords.js?");

/***/ }),

/***/ "./www/js/utils/file.js":
/*!******************************!*\
  !*** ./www/js/utils/file.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkFileTime\": () => (/* binding */ checkFileTime),\n/* harmony export */   \"isZipFile\": () => (/* binding */ isZipFile)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"?7e38\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n// @ts-check\r\n\r\n\r\n/** 检查文件时间是否在需要处理的时间内\r\n * @param {String} file 带路径的文件\r\n * @param {number} timePassed 时间，单位秒\r\n * @return {boolean}\r\n */\r\n function checkFileTime(file, timePassed){\r\n    if(timePassed==0) return true;\r\n\r\n    const fileState = fs__WEBPACK_IMPORTED_MODULE_0___default().statSync(file);\r\n    const timeLimit = new Date().getTime() - timePassed*1000;\r\n\r\n    return (fileState.ctimeMs > timeLimit) \r\n        || (fileState.atimeMs > timeLimit) \r\n        || (fileState.birthtimeMs > timeLimit) \r\n}\r\n\r\n/**\r\n * 检查文件格式是否是zip文件\r\n * @param {File} file \r\n * @returns {Boolean}\r\n */\r\nfunction isZipFile(file){\r\n    return file.type == \"application/zip\"\r\n        || file.type == \"application/octet-stream\" \r\n        || file.type == \"multipart/x-zip\" \r\n        || file.type == \"application/zip-compressed\" \r\n        || file.type == \"application/x-zip-compressed\" \r\n        || file.type == \"application/x-zip\";\r\n}\n\n//# sourceURL=webpack://fog.vicc.wang/./www/js/utils/file.js?");

/***/ }),

/***/ "./www/js/utils/id.js":
/*!****************************!*\
  !*** ./www/js/utils/id.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tileID\": () => (/* binding */ tileID),\n/* harmony export */   \"tileID2Number\": () => (/* binding */ tileID2Number)\n/* harmony export */ });\n// 用于生成各种唯一的ID\r\n\r\nfunction tileID(pixelSize, x, y, z){\r\n    return \"TILE\" + pixelSize + \":\" + [x, y, z].join(\",\");\r\n}\r\n\r\nfunction tileID2Number(TileID){\r\n    let t = TileID.split(\":\")[1];\r\n    let [x, y, z] = t.split(',');\r\n    return parseInt(y)*512+parseInt(x);\r\n}\n\n//# sourceURL=webpack://fog.vicc.wang/./www/js/utils/id.js?");

/***/ }),

/***/ "./www/js/utils/math.js":
/*!******************************!*\
  !*** ./www/js/utils/math.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CubicBezierCurve\": () => (/* binding */ CubicBezierCurve),\n/* harmony export */   \"i2i\": () => (/* binding */ i2i),\n/* harmony export */   \"i2p\": () => (/* binding */ i2p),\n/* harmony export */   \"p2i\": () => (/* binding */ p2i),\n/* harmony export */   \"p2p\": () => (/* binding */ p2p),\n/* harmony export */   \"zn\": () => (/* binding */ zn),\n/* harmony export */   \"getY\": () => (/* binding */ getY),\n/* harmony export */   \"getLat\": () => (/* binding */ getLat),\n/* harmony export */   \"getArea\": () => (/* binding */ getArea),\n/* harmony export */   \"UnitBezier\": () => (/* binding */ UnitBezier),\n/* harmony export */   \"hslToRgb\": () => (/* binding */ hslToRgb)\n/* harmony export */ });\n// 各种数学函数\r\n\r\n// import 'leaflet'\r\n\r\n/**\r\n * \r\n * @param {Number} y0 起点\r\n * @param {Number} y1 控制点1\r\n * @param {Number} y2 控制点2\r\n * @param {Number} y3 终点\r\n * @param {Number} t 0~1之间\r\n * @returns \r\n */\r\nfunction CubicBezierCurve(y0, y1, y2, y3, t){\r\n    return  (1-t)*(1-t)*(1-t) * y0\r\n            + 3*(1-t)*(1-t)*t * y1\r\n            + 3*(1-t)*t*t * y2 \r\n            + t*t*t * y3\r\n}\r\n\r\n/**\r\n * \r\n * @param {Number} i 在z坐标下的编号，i = y*(2^z) + x;\r\n * @param {Number} z 在Z坐标的编号，Y = y * (2^(Z-z))\r\n * @param {Number} Z 在Z坐标的编号，X = X * (2^(Z-z))\r\n * @returns {Number} 在Z坐标的编号，I = Y*(2^Z) + X\r\n */\r\nfunction i2i(i, z, Z){\r\n    return p2i(p2p(i2p(i, z), z, Z), Z);\r\n}\r\n\r\n/**\r\n * 返回z坐标系下编号为i的x, y坐标\r\n * @param {Number} i 坐标编号 i = y * (2^z) + x\r\n * @param {Number} z 坐标系z\r\n * @returns {L.Point} p{x, y}坐标\r\n */\r\nfunction i2p(i, z){\r\n    let zn = Math.pow(2, z);\r\n    return L.point(i%zn, i/zn).floor();\r\n}\r\n\r\n/**\r\n * 返回z坐标系下x, y坐标的编号i\r\n * @param {Object.<x,y>} p{x, y}坐标\r\n * @param {Number} z 坐标系z\r\n * @returns {Number} i 坐标编号 i = y * (2^z) + x\r\n */\r\nfunction p2i(p, z){\r\n    return p.x + p.y * Math.pow(2, z)\r\n}\r\n\r\n/**\r\n * 返回z坐标系下point点坐标在Z坐标下的point\r\n * @param {L.Point} p{x, y}坐标\r\n * @param {Number} z 坐标系z\r\n * @param {Number} Z 坐标系Z\r\n * @returns {L.point} P{x, y}坐标\r\n */\r\nfunction p2p(p, z, Z){\r\n    return p.multiplyBy(Math.pow(2, Z-z));\r\n}\r\n\r\n// 返回z坐标系最大宽度\r\nfunction zn(z){\r\n    return Math.pow(2, z);\r\n}\r\n\r\n\r\nconst PI = Math.PI;\r\n// EPSG3857\r\nconst R = 6371000;\r\nconst radians = Math.PI / 180;\r\nfunction getY(lat){\r\n    return R * Math.log(Math.tan((Math.PI*0.25) + (0.5 * lat * radians)));\r\n}\r\nfunction getLat(y){\r\n    return (Math.atan(Math.exp( y / R )) - Math.PI * 0.25) * 2 / radians;\r\n}\r\nfunction getArea(z, y, x){\r\n    const zn = 1 << z;\r\n    const y1 = R*Math.PI * (zn/2 - y) / zn;\r\n    const y2 = R*Math.PI * (zn/2 - (y+1)) / zn;\r\n    const lat1 = getLat(y1) / 180 * Math.PI;\r\n    const lat2 = getLat(y2) / 180 * Math.PI;\r\n    // const lat1 = EPSG3857.unproject(L.point(0, y1)).lat / 180 * Math.PI;\r\n    // const lat2 = EPSG3857.unproject(L.point(0, y2)).lat / 180 * Math.PI; \r\n    let area1 = 2*Math.PI*(R*R) * Math.abs(Math.sin(lat1) - Math.sin(lat2)) / zn;\r\n    return area1;\r\n}\r\n\r\n\r\n// function loop(){\r\n//     var t = (now - animationStartTime) / ( animationDuration*1000 );\r\n\r\n//     var curve = new UnitBezier(Bx, By, Cx, Cy);\r\n//     var t1 = curve.solve(t, UnitBezier.prototype.epsilon);\r\n//     var s1 = 1.0-t1;\r\n\r\n//     // Lerp using solved T\r\n//     var finalPosition.x = (startPosition.x * s1) + (endPosition.x * t1);\r\n//     var finalPosition.y = (startPosition.y * s1) + (endPosition.y * t1);\r\n// }\r\n\r\n\r\n/**\r\n* Solver for cubic bezier curve with implicit control points at (0,0) and (1.0, 1.0)\r\n*/\r\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\r\n    // pre-calculate the polynomial coefficients\r\n    // First and last control points are implied to be (0,0) and (1.0, 1.0)\r\n    this.cx = 3.0 * p1x;\r\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\r\n    this.ax = 1.0 - this.cx -this.bx;\r\n\r\n    this.cy = 3.0 * p1y;\r\n    this.by = 3.0 * (p2y - p1y) - this.cy;\r\n    this.ay = 1.0 - this.cy - this.by;\r\n}\r\n\r\nUnitBezier.prototype.epsilon = 1e-6; // Precision  \r\nUnitBezier.prototype.sampleCurveX = function(t) {\r\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\r\n}\r\nUnitBezier.prototype.sampleCurveY = function (t) {\r\n    return ((this.ay * t + this.by) * t + this.cy) * t;\r\n}\r\nUnitBezier.prototype.sampleCurveDerivativeX = function (t) {\r\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\r\n}\r\n\r\n\r\nUnitBezier.prototype.solveCurveX = function (x, epsilon) {\r\n    var t0; \r\n    var t1;\r\n    var t2;\r\n    var x2;\r\n    var d2;\r\n    var i;\r\n\r\n    // First try a few iterations of Newton's method -- normally very fast.\r\n    for (t2 = x, i = 0; i < 8; i++) {\r\n        x2 = this.sampleCurveX(t2) - x;\r\n        if (Math.abs (x2) < epsilon)\r\n            return t2;\r\n        d2 = this.sampleCurveDerivativeX(t2);\r\n        if (Math.abs(d2) < epsilon)\r\n            break;\r\n        t2 = t2 - x2 / d2;\r\n    }\r\n\r\n    // No solution found - use bi-section\r\n    t0 = 0.0;\r\n    t1 = 1.0;\r\n    t2 = x;\r\n\r\n    if (t2 < t0) return t0;\r\n    if (t2 > t1) return t1;\r\n\r\n    while (t0 < t1) {\r\n        x2 = this.sampleCurveX(t2);\r\n        if (Math.abs(x2 - x) < epsilon)\r\n            return t2;\r\n        if (x > x2) t0 = t2;\r\n        else t1 = t2;\r\n\r\n        t2 = (t1 - t0) * .5 + t0;\r\n    }\r\n\r\n    // Give up\r\n    return t2;\r\n}\r\n\r\n// Find new T as a function of Y along curve X\r\nUnitBezier.prototype.solve = function (x, epsilon) {\r\n    return this.sampleCurveY( this.solveCurveX(x, epsilon) );\r\n}\r\n\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 1].\r\n *\r\n * @param   {number}  h       The hue\r\n * @param   {number}  s       The saturation\r\n * @param   {number}  l       The lightness\r\n * @return  {Array}           The RGB representation\r\n */\r\nfunction hslToRgb(h, s, l){\r\n    var r, g, b;\r\n\r\n    if(s == 0){\r\n        r = g = b = l; // achromatic\r\n    }else{\r\n        var hue2rgb = function hue2rgb(p, q, t){\r\n            if(t < 0) t += 1;\r\n            if(t > 1) t -= 1;\r\n            if(t < 1/6) return p + (q - p) * 6 * t;\r\n            if(t < 1/2) return q;\r\n            if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        var p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1/3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1/3);\r\n    }\r\n\r\n    return [r, g, b];\r\n}\n\n//# sourceURL=webpack://fog.vicc.wang/./www/js/utils/math.js?");

/***/ }),

/***/ "./www/lib/leaflet.ChineseTmsProviders.js":
/*!************************************************!*\
  !*** ./www/lib/leaflet.ChineseTmsProviders.js ***!
  \************************************************/
/***/ (() => {

eval("// this L.CRS.Baidu from https://github.com/muyao1987/leaflet-tileLayer-baidugaode/blob/master/src/tileLayer.baidu.js\r\n\r\nif (L.Proj) {\r\n    L.CRS.Baidu = new L.Proj.CRS('EPSG:900913', '+proj=merc +a=6378206 +b=6356584.314245179 +lat_ts=0.0 +lon_0=0.0 +x_0=0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs', {\r\n        resolutions: function () {\r\n            var level = 19\r\n            var res = [];\r\n            res[0] = Math.pow(2, 18);\r\n            for (var i = 1; i < level; i++) {\r\n                res[i] = Math.pow(2, (18 - i))\r\n            }\r\n            return res;\r\n        }(),\r\n        origin: [0, 0],\r\n        bounds: L.bounds([20037508.342789244, 0], [0, 20037508.342789244])\r\n    });\r\n}\r\n\r\nL.TileLayer.ChinaProvider = L.TileLayer.extend({\r\n\r\n    initialize: function(type, options) { // (type, Object)\r\n        var providers = L.TileLayer.ChinaProvider.providers;\r\n\r\n        options = options || {}\r\n\r\n        var parts = type.split('.');\r\n\r\n        var providerName = parts[0];\r\n        var mapName = parts[1];\r\n        var mapType = parts[2];\r\n\r\n        var url = providers[providerName][mapName][mapType];\r\n        options.subdomains = providers[providerName].Subdomains;\r\n        options.key = options.key || providers[providerName].key;\r\n\r\n        if ('tms' in providers[providerName]) {\r\n            options.tms = providers[providerName]['tms']\r\n        }\r\n\r\n        L.TileLayer.prototype.initialize.call(this, url, options);\r\n    }\r\n});\r\n\r\nL.TileLayer.ChinaProvider.providers = {\r\n    TianDiTu: {\r\n        Normal: {\r\n            Map: \"https://t{s}.tianditu.gov.cn/DataServer?T=vec_w&X={x}&Y={y}&L={z}&tk={key}\",\r\n            Annotion: \"https://t{s}.tianditu.gov.cn/DataServer?T=cva_w&X={x}&Y={y}&L={z}&tk={key}\"\r\n        },\r\n        Satellite: {\r\n            Map: \"https://t{s}.tianditu.gov.cn/DataServer?T=img_w&X={x}&Y={y}&L={z}&tk={key}\",\r\n            Annotion: \"https://t{s}.tianditu.gov.cn/DataServer?T=cia_w&X={x}&Y={y}&L={z}&tk={key}\"\r\n        },\r\n        Terrain: {\r\n            Map: \"https://t{s}.tianditu.gov.cn/DataServer?T=ter_w&X={x}&Y={y}&L={z}&tk={key}\",\r\n            Annotion: \"https://t{s}.tianditu.gov.cn/DataServer?T=cta_w&X={x}&Y={y}&L={z}&tk={key}\"\r\n        },\r\n        Subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'],\r\n        key: \"174705aebfe31b79b3587279e211cb9a\"\r\n    },\r\n\r\n    GaoDe: {\r\n        Normal: {\r\n            Map: 'https://webrd0{s}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}'\r\n        },\r\n        Satellite: {\r\n            Map: 'https://webst0{s}.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}',\r\n            Annotion: 'https://webst0{s}.is.autonavi.com/appmaptile?style=8&x={x}&y={y}&z={z}'\r\n        },\r\n        Subdomains: [\"1\", \"2\", \"3\", \"4\"]\r\n    },\r\n\r\n    Google: {\r\n        Normal: {\r\n            Map: \"https://www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\r\n        },\r\n        Satellite: {\r\n            Map: \"https://www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}\",\r\n            Annotion: \"https://www.google.cn/maps/vt?lyrs=y@189&gl=cn&x={x}&y={y}&z={z}\",\r\n        },\r\n        Subdomains: []\r\n    },\r\n\r\n    Geoq: {\r\n        Normal: {\r\n            Map: \"https://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineCommunity/MapServer/tile/{z}/{y}/{x}\",\r\n            PurplishBlue: \"//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}\",\r\n            Gray: \"https://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}\",\r\n            Warm: \"https://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetWarm/MapServer/tile/{z}/{y}/{x}\",\r\n        },\r\n        Theme: {\r\n            Hydro: \"https://thematic.geoq.cn/arcgis/rest/services/ThematicMaps/WorldHydroMap/MapServer/tile/{z}/{y}/{x}\"\r\n        },\r\n        Subdomains: []\r\n    },\r\n\r\n    OSM: {\r\n        Normal: {\r\n            Map: \"https://{s}.tile.osm.org/{z}/{x}/{y}.png\",\r\n        },\r\n        Subdomains: ['a', 'b', 'c']\r\n    },\r\n\r\n    Baidu: {\r\n        Normal: {\r\n            Map: 'https://online{s}.map.bdimg.com/onlinelabel/?qt=tile&x={x}&y={y}&z={z}&styles=pl&scaler=1&p=1',\r\n        },\r\n        Satellite: {\r\n            Map: 'https://shangetu{s}.map.bdimg.com/it/u=x={x};y={y};z={z};v=009;type=sate&fm=46',\r\n            Annotion: 'https://online{s}.map.bdimg.com/tile/?qt=tile&x={x}&y={y}&z={z}&styles=sl&v=020'\r\n        },\r\n        Subdomains: '0123456789',\r\n        tms: true\r\n    },\r\n\r\n    Tencent: {\r\n        Normal: {\r\n            Map: \"https://rt{s}.map.gtimg.com/realtimerender?z={z}&x={x}&y={-y}&type=vector&style=0\",\r\n        },\r\n        Subdomains: '012',\r\n        tms: true\r\n    }\r\n\r\n};\r\n\r\n// L.tileLayer.chinaProvider = function(type, options) {\r\n//     return new L.TileLayer.ChinaProvider(type, options);\r\n// };\r\n\n\n//# sourceURL=webpack://fog.vicc.wang/./www/lib/leaflet.ChineseTmsProviders.js?");

/***/ }),

/***/ "./www/lib/leaflet.mapCorrection.js":
/*!******************************************!*\
  !*** ./www/lib/leaflet.mapCorrection.js ***!
  \******************************************/
/***/ (() => {

eval("/* 来源\r\n * https://github.com/gisarmory/Leaflet.InternetMapCorrection\r\n * gcj02: 高德坐标系\r\n */\r\n\r\n//坐标转换\r\nL.CoordConver = function () {\r\n\r\n    /**百度转84*/\r\n    this.bd09_To_gps84 = function(lng, lat) {\r\n        var gcj02 = this.bd09_To_gcj02(lng, lat);\r\n        var map84 = this.gcj02_To_gps84(gcj02.lng, gcj02.lat);\r\n        return map84;\r\n    }\r\n    /**84转百度*/\r\n    this.gps84_To_bd09 = function (lng, lat) {\r\n        var gcj02 = this.gps84_To_gcj02(lng, lat);\r\n        var bd09 = this.gcj02_To_bd09(gcj02.lng, gcj02.lat);\r\n        return bd09;\r\n    }\r\n    /**84转火星*/\r\n    this.gps84_To_gcj02 = function (lng, lat) {\r\n        var dLat = transformLat(lng - 105.0, lat - 35.0);\r\n        var dLng = transformLng(lng - 105.0, lat - 35.0);\r\n        var radLat = lat / 180.0 * pi;\r\n        var magic = Math.sin(radLat);\r\n        magic = 1 - ee * magic * magic;\r\n        var sqrtMagic = Math.sqrt(magic);\r\n        dLat = (dLat * 180.0) / ((a * (1 - ee)) / (magic * sqrtMagic) * pi);\r\n        dLng = (dLng * 180.0) / (a / sqrtMagic * Math.cos(radLat) * pi);\r\n        var mgLat = lat + dLat;\r\n        var mgLng = lng + dLng;\r\n        var newCoord = {\r\n            lng: mgLng,\r\n            lat: mgLat\r\n        };\r\n        return newCoord;\r\n    }\r\n    /**火星转84*/\r\n    this.gcj02_To_gps84 = function (lng, lat) {\r\n        var coord = transform(lng, lat);\r\n        var lontitude = lng * 2 - coord.lng;\r\n        var latitude = lat * 2 - coord.lat;\r\n        var newCoord = {\r\n            lng: lontitude,\r\n            lat: latitude\r\n        };\r\n        return newCoord;\r\n    }\r\n    /**火星转百度*/\r\n    this.gcj02_To_bd09 = function (x, y) {\r\n        var z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * x_pi);\r\n        var theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * x_pi);\r\n        var bd_lng = z * Math.cos(theta) + 0.0065;\r\n        var bd_lat = z * Math.sin(theta) + 0.006;\r\n        var newCoord = {\r\n            lng: bd_lng,\r\n            lat: bd_lat\r\n        };\r\n        return newCoord;\r\n    }\r\n    /**百度转火星*/\r\n    this.bd09_To_gcj02 = function (bd_lng, bd_lat) {\r\n        var x = bd_lng - 0.0065;\r\n        var y = bd_lat - 0.006;\r\n        var z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * x_pi);\r\n        var theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * x_pi);\r\n        var gg_lng = z * Math.cos(theta);\r\n        var gg_lat = z * Math.sin(theta);\r\n        var newCoord = {\r\n            lng: gg_lng,\r\n            lat: gg_lat\r\n        };\r\n        return newCoord;\r\n    }\r\n\r\n    const pi = 3.1415926535897932384626;\r\n    const a = 6378245.0;\r\n    const ee = 0.00669342162296594323;\r\n    const x_pi = pi * 3000.0 / 180.0;\r\n    const R = 6378137;\r\n\r\n    function transform(lng, lat) {\r\n        var dLat = transformLat(lng - 105.0, lat - 35.0);\r\n        var dLng = transformLng(lng - 105.0, lat - 35.0);\r\n        var radLat = lat / 180.0 * pi;\r\n        var magic = Math.sin(radLat);\r\n        magic = 1 - ee * magic * magic;\r\n        var sqrtMagic = Math.sqrt(magic);\r\n        dLat = (dLat * 180.0) / ((a * (1 - ee)) / (magic * sqrtMagic) * pi);\r\n        dLng = (dLng * 180.0) / (a / sqrtMagic * Math.cos(radLat) * pi);\r\n        var mgLat = lat + dLat;\r\n        var mgLng = lng + dLng;\r\n        var newCoord = {\r\n            lng: mgLng,\r\n            lat: mgLat\r\n        };\r\n        return newCoord;\r\n    }\r\n\r\n    function transformLat(x, y) {\r\n        var ret = -100.0 + 2.0 * x + 3.0 * y + 0.2 * y * y + 0.1 * x * y + 0.2 * Math.sqrt(Math.abs(x));\r\n        ret += (20.0 * Math.sin(6.0 * x * pi) + 20.0 * Math.sin(2.0 * x * pi)) * 2.0 / 3.0;\r\n        ret += (20.0 * Math.sin(y * pi) + 40.0 * Math.sin(y / 3.0 * pi)) * 2.0 / 3.0;\r\n        ret += (160.0 * Math.sin(y / 12.0 * pi) + 320 * Math.sin(y * pi / 30.0)) * 2.0 / 3.0;\r\n        return ret;\r\n    }\r\n\r\n    function transformLng(x, y) {\r\n        var ret = 300.0 + x + 2.0 * y + 0.1 * x * x + 0.1 * x * y + 0.1 * Math.sqrt(Math.abs(x));\r\n        ret += (20.0 * Math.sin(6.0 * x * pi) + 20.0 * Math.sin(2.0 * x * pi)) * 2.0 / 3.0;\r\n        ret += (20.0 * Math.sin(x * pi) + 40.0 * Math.sin(x / 3.0 * pi)) * 2.0 / 3.0;\r\n        ret += (150.0 * Math.sin(x / 12.0 * pi) + 300.0 * Math.sin(x / 30.0 * pi)) * 2.0 / 3.0;\r\n        return ret;\r\n    }\r\n}\r\n\r\nL.coordConver = function () {\r\n    return new L.CoordConver()\r\n}\r\n\r\nL.tileLayer.chinaProvider = function (type, options) {\r\n    options = options || {}\r\n    options.corrdType = getCorrdType(type);\r\n    return new L.TileLayer.ChinaProvider(type, options);\r\n\r\n    //获取坐标类型\r\n    function getCorrdType(type) {\r\n        var parts = type.split('.');\r\n        var providerName = parts[0];\r\n        var zbName = \"wgs84\"\r\n        switch (providerName) {\r\n            case \"Geoq\":\r\n            case \"GaoDe\":\r\n            case \"Google\":\r\n                zbName = \"gcj02\";\r\n                break;\r\n            case \"Baidu\":\r\n                zbName = \"bd09\";\r\n                break;\r\n            case \"OSM\":\r\n            case \"TianDiTu\":\r\n                zbName = \"wgs84\";\r\n                break;\r\n        }\r\n        return zbName;\r\n    }\r\n};\r\n\r\nL.GridLayer.include({\r\n    _setZoomTransform: function (level, _center, zoom) {\r\n        var center = _center;\r\n        if (center != undefined && this.options) {\r\n            if (this.options.corrdType == 'gcj02') {\r\n                center = L.coordConver().gps84_To_gcj02(_center.lng, _center.lat);\r\n            } else if (this.options.corrdType == 'bd09') {\r\n                center = L.coordConver().gps84_To_bd09(_center.lng, _center.lat);\r\n            }\r\n        }\r\n        var scale = this._map.getZoomScale(zoom, level.zoom),\r\n            translate = level.origin.multiplyBy(scale)\r\n            .subtract(this._map._getNewPixelOrigin(center, zoom)).round();\r\n\r\n        if (L.Browser.any3d) {\r\n            L.DomUtil.setTransform(level.el, translate, scale);\r\n        } else {\r\n            L.DomUtil.setPosition(level.el, translate);\r\n        }\r\n    },\r\n    _getTiledPixelBounds: function (_center) {\r\n        var center = _center;\r\n        if (center != undefined && this.options) {\r\n            if (this.options.corrdType == 'gcj02') {\r\n                center = L.coordConver().gps84_To_gcj02(_center.lng, _center.lat);\r\n            } else if (this.options.corrdType == 'bd09') {\r\n                center = L.coordConver().gps84_To_bd09(_center.lng, _center.lat);\r\n            }\r\n        }\r\n        var map = this._map,\r\n            mapZoom = map._animatingZoom ? Math.max(map._animateToZoom, map.getZoom()) : map.getZoom(),\r\n            scale = map.getZoomScale(mapZoom, this._tileZoom),\r\n            pixelCenter = map.project(center, this._tileZoom).floor(),\r\n            halfSize = map.getSize().divideBy(scale * 2);\r\n\r\n        return new L.Bounds(pixelCenter.subtract(halfSize), pixelCenter.add(halfSize));\r\n    }\r\n})\n\n//# sourceURL=webpack://fog.vicc.wang/./www/lib/leaflet.mapCorrection.js?");

/***/ }),

/***/ "jszip":
/*!************************!*\
  !*** external "JSZip" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = JSZip;

/***/ }),

/***/ "leaflet":
/*!********************!*\
  !*** external "L" ***!
  \********************/
/***/ ((module) => {

"use strict";
module.exports = L;

/***/ }),

/***/ "pako":
/*!***********************!*\
  !*** external "pako" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = pako;

/***/ }),

/***/ "?7e38":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://fog.vicc.wang/fs_(ignored)?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./www/js/eraser/eraser.js");
/******/ 	
/******/ })()
;